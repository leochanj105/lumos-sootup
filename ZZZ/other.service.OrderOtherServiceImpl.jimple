public class other.service.OrderOtherServiceImpl extends java.lang.Object implements other.service.OrderOtherService
{
/*OrderOtherServiceImpl.java*/
/*Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Lorg/springframework/stereotype/Service; without elements
*/
/*Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Lorg/springframework/beans/factory/annotation/Autowired; without elements
*/
    private other.repository.OrderOtherRepository orderOtherRepository;

    public void <init>()
    {
        other.service.OrderOtherServiceImpl this;

        this := @this: other.service.OrderOtherServiceImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*10*/

        return;
/*10*/
    }

/*[seatRequest]*/
    public other.domain.LeftTicketInfo getSoldTickets(other.domain.SeatRequest)
    {
        java.util.Date $stack8;
        other.repository.OrderOtherRepository $stack7;
        other.service.OrderOtherServiceImpl this;
        java.util.ArrayList $stack10;
        java.util.HashSet $stack11;
        other.domain.Order tempOrder;
        int $stack17;
        java.lang.String $stack9, $stack16, $stack18, $stack19;
        boolean $stack13;
        java.util.Iterator $stack12;
        other.domain.LeftTicketInfo $stack22;
        other.domain.SeatRequest seatRequest;
        other.domain.Ticket $stack15;
        java.lang.Object $stack14;

        this := @this: other.service.OrderOtherServiceImpl;

        seatRequest := @parameter0: other.domain.SeatRequest;

        $stack7 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*17*/

        $stack8 = virtualinvoke seatRequest.<other.domain.SeatRequest: java.util.Date getTravelDate()>();
/*17*/

        $stack9 = virtualinvoke seatRequest.<other.domain.SeatRequest: java.lang.String getTrainNumber()>();
/*18*/

        $stack10 = interfaceinvoke $stack7.<other.repository.OrderOtherRepository: java.util.ArrayList findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)>($stack8, $stack9);
/*17*/

        $stack11 = new java.util.HashSet;
/*19*/

        specialinvoke $stack11.<java.util.HashSet: void <init>()>();
/*19*/

        $stack12 = virtualinvoke $stack10.<java.util.ArrayList: java.util.Iterator iterator()>();
/*20*/

        goto label2;
/*20*/

     label1:
        $stack14 = interfaceinvoke $stack12.<java.util.Iterator: java.lang.Object next()>();
/*20*/

        tempOrder = (other.domain.Order) $stack14;
/*20*/

        $stack15 = new other.domain.Ticket;
/*21*/

        specialinvoke $stack15.<other.domain.Ticket: void <init>()>();
/*21*/

        $stack16 = virtualinvoke tempOrder.<other.domain.Order: java.lang.String getSeatNumber()>();
/*22*/

        $stack17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($stack16);
/*22*/

        virtualinvoke $stack15.<other.domain.Ticket: void setSeatNo(int)>($stack17);
/*22*/

        $stack18 = virtualinvoke tempOrder.<other.domain.Order: java.lang.String getFrom()>();
/*23*/

        virtualinvoke $stack15.<other.domain.Ticket: void setStartStation(java.lang.String)>($stack18);
/*23*/

        $stack19 = virtualinvoke tempOrder.<other.domain.Order: java.lang.String getTo()>();
/*24*/

        virtualinvoke $stack15.<other.domain.Ticket: void setDestStation(java.lang.String)>($stack19);
/*24*/

        interfaceinvoke $stack11.<java.util.Set: boolean add(java.lang.Object)>($stack15);
/*25*/

     label2:
        $stack13 = interfaceinvoke $stack12.<java.util.Iterator: boolean hasNext()>();
/*20*/

        if $stack13 != 0 goto label1;
/*20*/

        $stack22 = new other.domain.LeftTicketInfo;
/*27*/

        specialinvoke $stack22.<other.domain.LeftTicketInfo: void <init>()>();
/*27*/

        virtualinvoke $stack22.<other.domain.LeftTicketInfo: void setSoldTickets(java.util.Set)>($stack11);
/*28*/

        return $stack22;
/*29*/
    }

/*[id]*/
    public other.domain.Order findOrderById(java.util.UUID)
    {
        other.domain.Order $stack3;
        java.util.UUID id;
        other.repository.OrderOtherRepository $stack2;
        other.service.OrderOtherServiceImpl this;

        this := @this: other.service.OrderOtherServiceImpl;

        id := @parameter0: java.util.UUID;

        $stack2 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*33*/

        $stack3 = interfaceinvoke $stack2.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>(id);
/*33*/

        return $stack3;
/*33*/
    }

/*[order]*/
    public other.domain.CreateOrderResult create(other.domain.Order)
    {
        other.domain.CreateOrderResult $stack8;
        other.repository.OrderOtherRepository $stack5, $stack11;
        other.service.OrderOtherServiceImpl this;
        java.util.ArrayList $stack7;
        other.domain.Order order;
        java.lang.String $stack16, $stack18;
        boolean $stack9;
        java.io.PrintStream $stack4, $stack13, $stack15, $stack19;
        java.util.UUID $stack6, $stack10;
        java.lang.StringBuilder $stack14, $stack17;

        this := @this: other.service.OrderOtherServiceImpl;

        order := @parameter0: other.domain.Order;

        $stack4 = <java.lang.System: java.io.PrintStream out>;
/*38*/

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Create Order] Ready Create Order");
/*38*/

        $stack5 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*39*/

        $stack6 = virtualinvoke order.<other.domain.Order: java.util.UUID getAccountId()>();
/*39*/

        $stack7 = interfaceinvoke $stack5.<other.repository.OrderOtherRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack6);
/*39*/

        $stack8 = new other.domain.CreateOrderResult;
/*40*/

        specialinvoke $stack8.<other.domain.CreateOrderResult: void <init>()>();
/*40*/

        $stack9 = virtualinvoke $stack7.<java.util.ArrayList: boolean contains(java.lang.Object)>(order);
/*41*/

        if $stack9 == 0 goto label1;
/*41*/

        $stack19 = <java.lang.System: java.io.PrintStream out>;
/*42*/

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Order Create] Fail.Order already exists.");
/*42*/

        virtualinvoke $stack8.<other.domain.CreateOrderResult: void setStatus(boolean)>(0);
/*43*/

        virtualinvoke $stack8.<other.domain.CreateOrderResult: void setMessage(java.lang.String)>("Order already exist");
/*44*/

        virtualinvoke $stack8.<other.domain.CreateOrderResult: void setOrder(other.domain.Order)>(null);
/*45*/

        goto label2;
/*46*/

     label1:
        $stack10 = virtualinvoke order.<other.domain.Order: java.util.UUID getId()>();
/*47*/

        virtualinvoke order.<other.domain.Order: void setId(java.util.UUID)>($stack10);
/*47*/

        $stack11 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*48*/

        interfaceinvoke $stack11.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>(order);
/*48*/

        $stack13 = <java.lang.System: java.io.PrintStream out>;
/*49*/

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Order Create] Success.");
/*49*/

        $stack15 = <java.lang.System: java.io.PrintStream out>;
/*50*/

        $stack14 = new java.lang.StringBuilder;
/*50*/

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Order Create] Price:");
/*50*/

        $stack16 = virtualinvoke order.<other.domain.Order: java.lang.String getPrice()>();
/*50*/

        $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);
/*50*/

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();
/*50*/

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>($stack18);
/*50*/

        virtualinvoke $stack8.<other.domain.CreateOrderResult: void setStatus(boolean)>(1);
/*51*/

        virtualinvoke $stack8.<other.domain.CreateOrderResult: void setMessage(java.lang.String)>("Success");
/*52*/

        virtualinvoke $stack8.<other.domain.CreateOrderResult: void setOrder(other.domain.Order)>(order);
/*53*/

     label2:
        return $stack8;
/*55*/
    }

/*[order]*/
    public void initOrder(other.domain.Order)
    {
        java.io.PrintStream $stack7;
        java.util.UUID $stack4, $stack8;
        other.repository.OrderOtherRepository $stack3, $stack11;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order order, $stack5;
        java.lang.StringBuilder $stack6, $stack9;
        java.lang.String $stack10;

        this := @this: other.service.OrderOtherServiceImpl;

        order := @parameter0: other.domain.Order;

        $stack3 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*60*/

        $stack4 = virtualinvoke order.<other.domain.Order: java.util.UUID getId()>();
/*60*/

        $stack5 = interfaceinvoke $stack3.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack4);
/*60*/

        if $stack5 != null goto label1;
/*61*/

        $stack11 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*62*/

        interfaceinvoke $stack11.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>(order);
/*62*/

        goto label2;
/*63*/

     label1:
        $stack7 = <java.lang.System: java.io.PrintStream out>;
/*64*/

        $stack6 = new java.lang.StringBuilder;
/*64*/

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Init Order] Order Already Exists ID:");
/*64*/

        $stack8 = virtualinvoke order.<other.domain.Order: java.util.UUID getId()>();
/*64*/

        $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8);
/*64*/

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();
/*64*/

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>($stack10);
/*64*/

     label2:
        return;
/*66*/
    }

/*[oai]*/
    public other.domain.OrderAlterResult alterOrder(other.domain.OrderAlterInfo)
    {
        java.io.PrintStream $stack19, $stack21;
        other.domain.CreateOrderResult $stack16;
        java.util.UUID $stack8, $stack14;
        other.domain.OrderAlterResult $stack7;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack9, $stack13, $stack15;
        other.domain.OrderAlterInfo oai;
        other.domain.OrderStatus $stack10;
        int $stack11;
        java.lang.String $stack18;
        boolean $stack17;

        this := @this: other.service.OrderOtherServiceImpl;

        oai := @parameter0: other.domain.OrderAlterInfo;

        $stack7 = new other.domain.OrderAlterResult;
/*71*/

        specialinvoke $stack7.<other.domain.OrderAlterResult: void <init>()>();
/*71*/

        $stack8 = virtualinvoke oai.<other.domain.OrderAlterInfo: java.util.UUID getPreviousOrderId()>();
/*72*/

        $stack9 = virtualinvoke this.<other.service.OrderOtherServiceImpl: other.domain.Order findOrderById(java.util.UUID)>($stack8);
/*73*/

        if $stack9 != null goto label1;
/*74*/

        $stack21 = <java.lang.System: java.io.PrintStream out>;
/*75*/

        virtualinvoke $stack21.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Alter Order] Fail.Order do not exist.");
/*75*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setStatus(boolean)>(0);
/*76*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setMessage(java.lang.String)>("Old Order Does Not Exists");
/*77*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setOldOrder(other.domain.Order)>(null);
/*78*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setNewOrder(other.domain.Order)>(null);
/*79*/

        return $stack7;
/*80*/

     label1:
        $stack10 = <other.domain.OrderStatus: other.domain.OrderStatus CANCEL>;
/*82*/

        $stack11 = virtualinvoke $stack10.<other.domain.OrderStatus: int getCode()>();
/*82*/

        virtualinvoke $stack9.<other.domain.Order: void setStatus(int)>($stack11);
/*82*/

        virtualinvoke this.<other.service.OrderOtherServiceImpl: other.domain.ChangeOrderResult saveChanges(other.domain.Order)>($stack9);
/*83*/

        $stack13 = virtualinvoke oai.<other.domain.OrderAlterInfo: other.domain.Order getNewOrderInfo()>();
/*84*/

        $stack14 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();
/*85*/

        virtualinvoke $stack13.<other.domain.Order: void setId(java.util.UUID)>($stack14);
/*85*/

        $stack15 = virtualinvoke oai.<other.domain.OrderAlterInfo: other.domain.Order getNewOrderInfo()>();
/*86*/

        $stack16 = virtualinvoke this.<other.service.OrderOtherServiceImpl: other.domain.CreateOrderResult create(other.domain.Order)>($stack15);
/*86*/

        $stack17 = virtualinvoke $stack16.<other.domain.CreateOrderResult: boolean isStatus()>();
/*87*/

        if $stack17 == 0 goto label2;
/*87*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setStatus(boolean)>(1);
/*88*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setMessage(java.lang.String)>("Success");
/*89*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setOldOrder(other.domain.Order)>($stack9);
/*90*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setNewOrder(other.domain.Order)>($stack13);
/*91*/

        $stack19 = <java.lang.System: java.io.PrintStream out>;
/*92*/

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Alter Order] Success.");
/*92*/

        goto label3;
/*93*/

     label2:
        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setStatus(boolean)>(0);
/*94*/

        $stack18 = virtualinvoke $stack16.<other.domain.CreateOrderResult: java.lang.String getMessage()>();
/*95*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setMessage(java.lang.String)>($stack18);
/*95*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setOldOrder(other.domain.Order)>(null);
/*96*/

        virtualinvoke $stack7.<other.domain.OrderAlterResult: void setNewOrder(other.domain.Order)>(null);
/*97*/

     label3:
        return $stack7;
/*99*/
    }

/*Signature: (Lother/domain/QueryInfo;Ljava/lang/String;)Ljava/util/ArrayList<Lother/domain/Order;>;*/
/*[qi, accountId]*/
    public java.util.ArrayList queryOrders(other.domain.QueryInfo, java.lang.String)
    {
        java.util.Date $stack33, $stack34, $stack38, $stack39, $stack42, $stack43, $stack47, $stack48;
        other.repository.OrderOtherRepository $stack10;
        other.service.OrderOtherServiceImpl this;
        other.domain.QueryInfo qi;
        boolean $stack18, $stack23, $stack35, $stack40, $stack44, $stack49, $stack60, $stack62, statePassFlag, $stack25, travelDatePassFlag, $stack27, boughtDatePassFlag, $stack21;
        java.util.UUID $stack11;
        java.lang.StringBuilder $stack13, $stack16, $stack55, $stack58, $stack63, $stack66;
        java.util.ArrayList $stack12, $stack19;
        other.domain.Order tempOrder;
        int $stack15, $stack51, $stack52, $stack57, $stack65;
        java.lang.String accountId, $stack17, $stack59, $stack67;
        java.io.PrintStream $stack14, $stack56, $stack64, $stack24, $stack26, $stack28, $stack29;
        java.util.Iterator $stack20;
        java.lang.Object $stack22;

        this := @this: other.service.OrderOtherServiceImpl;

        qi := @parameter0: other.domain.QueryInfo;

        accountId := @parameter1: java.lang.String;

        $stack10 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*105*/

        $stack11 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(accountId);
/*105*/

        $stack12 = interfaceinvoke $stack10.<other.repository.OrderOtherRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack11);
/*105*/

        $stack14 = <java.lang.System: java.io.PrintStream out>;
/*106*/

        $stack13 = new java.lang.StringBuilder;
/*106*/

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Query Order][Step 1] Get Orders Number of Account:");
/*106*/

        $stack15 = virtualinvoke $stack12.<java.util.ArrayList: int size()>();
/*106*/

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15);
/*106*/

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();
/*106*/

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack17);
/*106*/

        $stack18 = virtualinvoke qi.<other.domain.QueryInfo: boolean isEnableStateQuery()>();
/*108*/

        if $stack18 != 0 goto label01;
/*108*/

        $stack60 = virtualinvoke qi.<other.domain.QueryInfo: boolean isEnableBoughtDateQuery()>();
/*108*/

        if $stack60 != 0 goto label01;
/*108*/

        $stack62 = virtualinvoke qi.<other.domain.QueryInfo: boolean isEnableTravelDateQuery()>();
/*108*/

        if $stack62 == 0 goto label14;
/*108*/

     label01:
        $stack19 = new java.util.ArrayList;
/*109*/

        specialinvoke $stack19.<java.util.ArrayList: void <init>()>();
/*109*/

        $stack20 = virtualinvoke $stack12.<java.util.ArrayList: java.util.Iterator iterator()>();
/*110*/

        goto label13;
/*110*/

     label02:
        $stack22 = interfaceinvoke $stack20.<java.util.Iterator: java.lang.Object next()>();
/*110*/

        tempOrder = (other.domain.Order) $stack22;
/*110*/

        $stack23 = virtualinvoke qi.<other.domain.QueryInfo: boolean isEnableStateQuery()>();
/*115*/

        if $stack23 == 0 goto label04;
/*115*/

        $stack51 = virtualinvoke tempOrder.<other.domain.Order: int getStatus()>();
/*116*/

        $stack52 = virtualinvoke qi.<other.domain.QueryInfo: int getState()>();
/*116*/

        if $stack51 == $stack52 goto label03;
/*116*/

        statePassFlag = 0;
/*117*/

        goto label05;
/*118*/

     label03:
        statePassFlag = 1;
/*119*/

        goto label05;
/*121*/

     label04:
        statePassFlag = 1;
/*122*/

     label05:
        $stack24 = <java.lang.System: java.io.PrintStream out>;
/*124*/

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Query Order][Step 2][Check Status Fits End]");
/*124*/

        $stack25 = virtualinvoke qi.<other.domain.QueryInfo: boolean isEnableTravelDateQuery()>();
/*126*/

        if $stack25 == 0 goto label07;
/*126*/

        $stack42 = virtualinvoke tempOrder.<other.domain.Order: java.util.Date getTravelDate()>();
/*127*/

        $stack43 = virtualinvoke qi.<other.domain.QueryInfo: java.util.Date getTravelDateEnd()>();
/*127*/

        $stack44 = virtualinvoke $stack42.<java.util.Date: boolean before(java.util.Date)>($stack43);
/*127*/

        if $stack44 == 0 goto label06;
/*127*/

        $stack47 = virtualinvoke tempOrder.<other.domain.Order: java.util.Date getTravelDate()>();
/*128*/

        $stack48 = virtualinvoke qi.<other.domain.QueryInfo: java.util.Date getBoughtDateStart()>();
/*128*/

        $stack49 = virtualinvoke $stack47.<java.util.Date: boolean after(java.util.Date)>($stack48);
/*128*/

        if $stack49 == 0 goto label06;
/*128*/

        travelDatePassFlag = 1;
/*129*/

        goto label08;
/*130*/

     label06:
        travelDatePassFlag = 0;
/*131*/

        goto label08;
/*133*/

     label07:
        travelDatePassFlag = 1;
/*134*/

     label08:
        $stack26 = <java.lang.System: java.io.PrintStream out>;
/*136*/

        virtualinvoke $stack26.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Query Order][Step 2][Check Travel Date End]");
/*136*/

        $stack27 = virtualinvoke qi.<other.domain.QueryInfo: boolean isEnableBoughtDateQuery()>();
/*138*/

        if $stack27 == 0 goto label10;
/*138*/

        $stack33 = virtualinvoke tempOrder.<other.domain.Order: java.util.Date getBoughtDate()>();
/*139*/

        $stack34 = virtualinvoke qi.<other.domain.QueryInfo: java.util.Date getBoughtDateEnd()>();
/*139*/

        $stack35 = virtualinvoke $stack33.<java.util.Date: boolean before(java.util.Date)>($stack34);
/*139*/

        if $stack35 == 0 goto label09;
/*139*/

        $stack38 = virtualinvoke tempOrder.<other.domain.Order: java.util.Date getBoughtDate()>();
/*140*/

        $stack39 = virtualinvoke qi.<other.domain.QueryInfo: java.util.Date getBoughtDateStart()>();
/*140*/

        $stack40 = virtualinvoke $stack38.<java.util.Date: boolean after(java.util.Date)>($stack39);
/*140*/

        if $stack40 == 0 goto label09;
/*140*/

        boughtDatePassFlag = 1;
/*141*/

        goto label11;
/*142*/

     label09:
        boughtDatePassFlag = 0;
/*143*/

        goto label11;
/*145*/

     label10:
        boughtDatePassFlag = 1;
/*146*/

     label11:
        $stack28 = <java.lang.System: java.io.PrintStream out>;
/*148*/

        virtualinvoke $stack28.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Query Order][Step 2][Check Bought Date End]");
/*148*/

        if statePassFlag == 0 goto label12;
/*150*/

        if boughtDatePassFlag == 0 goto label12;
/*150*/

        if travelDatePassFlag == 0 goto label12;
/*150*/

        virtualinvoke $stack19.<java.util.ArrayList: boolean add(java.lang.Object)>(tempOrder);
/*151*/

     label12:
        $stack29 = <java.lang.System: java.io.PrintStream out>;
/*153*/

        virtualinvoke $stack29.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Query Order][Step 2][Check All Requirement End]");
/*153*/

     label13:
        $stack21 = interfaceinvoke $stack20.<java.util.Iterator: boolean hasNext()>();
/*110*/

        if $stack21 != 0 goto label02;
/*110*/

        $stack56 = <java.lang.System: java.io.PrintStream out>;
/*155*/

        $stack55 = new java.lang.StringBuilder;
/*155*/

        specialinvoke $stack55.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Query Order] Get order num:");
/*155*/

        $stack57 = virtualinvoke $stack19.<java.util.ArrayList: int size()>();
/*155*/

        $stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack57);
/*155*/

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>();
/*155*/

        virtualinvoke $stack56.<java.io.PrintStream: void println(java.lang.String)>($stack59);
/*155*/

        return $stack19;
/*156*/

     label14:
        $stack64 = <java.lang.System: java.io.PrintStream out>;
/*158*/

        $stack63 = new java.lang.StringBuilder;
/*158*/

        specialinvoke $stack63.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Query Order] Get order num:");
/*158*/

        $stack65 = virtualinvoke $stack12.<java.util.ArrayList: int size()>();
/*158*/

        $stack66 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack65);
/*158*/

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>();
/*158*/

        virtualinvoke $stack64.<java.io.PrintStream: void println(java.lang.String)>($stack67);
/*158*/

        return $stack12;
/*159*/
    }

/*[order]*/
    public other.domain.ChangeOrderResult saveChanges(other.domain.Order)
    {
        java.util.Date $stack8, $stack9, $stack10;
        other.domain.ChangeOrderResult $stack6;
        other.repository.OrderOtherRepository $stack22;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order order, $stack5;
        int $stack11, $stack12, $stack16, $stack21;
        java.lang.String $stack13, $stack14, $stack15, $stack17, $stack18, $stack19, $stack20;
        java.io.PrintStream $stack24, $stack25;
        java.util.UUID $stack4, $stack7;

        this := @this: other.service.OrderOtherServiceImpl;

        order := @parameter0: other.domain.Order;

        $stack4 = virtualinvoke order.<other.domain.Order: java.util.UUID getId()>();
/*165*/

        $stack5 = virtualinvoke this.<other.service.OrderOtherServiceImpl: other.domain.Order findOrderById(java.util.UUID)>($stack4);
/*165*/

        $stack6 = new other.domain.ChangeOrderResult;
/*166*/

        specialinvoke $stack6.<other.domain.ChangeOrderResult: void <init>()>();
/*166*/

        if $stack5 != null goto label1;
/*167*/

        $stack25 = <java.lang.System: java.io.PrintStream out>;
/*168*/

        virtualinvoke $stack25.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Modify Order] Fail.Order not found.");
/*168*/

        virtualinvoke $stack6.<other.domain.ChangeOrderResult: void setStatus(boolean)>(0);
/*169*/

        virtualinvoke $stack6.<other.domain.ChangeOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*170*/

        virtualinvoke $stack6.<other.domain.ChangeOrderResult: void setOrder(other.domain.Order)>(null);
/*171*/

        goto label2;
/*172*/

     label1:
        $stack7 = virtualinvoke order.<other.domain.Order: java.util.UUID getAccountId()>();
/*173*/

        virtualinvoke $stack5.<other.domain.Order: void setAccountId(java.util.UUID)>($stack7);
/*173*/

        $stack8 = virtualinvoke order.<other.domain.Order: java.util.Date getBoughtDate()>();
/*174*/

        virtualinvoke $stack5.<other.domain.Order: void setBoughtDate(java.util.Date)>($stack8);
/*174*/

        $stack9 = virtualinvoke order.<other.domain.Order: java.util.Date getTravelDate()>();
/*175*/

        virtualinvoke $stack5.<other.domain.Order: void setTravelDate(java.util.Date)>($stack9);
/*175*/

        $stack10 = virtualinvoke order.<other.domain.Order: java.util.Date getTravelTime()>();
/*176*/

        virtualinvoke $stack5.<other.domain.Order: void setTravelTime(java.util.Date)>($stack10);
/*176*/

        $stack11 = virtualinvoke order.<other.domain.Order: int getCoachNumber()>();
/*177*/

        virtualinvoke $stack5.<other.domain.Order: void setCoachNumber(int)>($stack11);
/*177*/

        $stack12 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*178*/

        virtualinvoke $stack5.<other.domain.Order: void setSeatClass(int)>($stack12);
/*178*/

        $stack13 = virtualinvoke order.<other.domain.Order: java.lang.String getSeatNumber()>();
/*179*/

        virtualinvoke $stack5.<other.domain.Order: void setSeatNumber(java.lang.String)>($stack13);
/*179*/

        $stack14 = virtualinvoke order.<other.domain.Order: java.lang.String getFrom()>();
/*180*/

        virtualinvoke $stack5.<other.domain.Order: void setFrom(java.lang.String)>($stack14);
/*180*/

        $stack15 = virtualinvoke order.<other.domain.Order: java.lang.String getTo()>();
/*181*/

        virtualinvoke $stack5.<other.domain.Order: void setTo(java.lang.String)>($stack15);
/*181*/

        $stack16 = virtualinvoke order.<other.domain.Order: int getStatus()>();
/*182*/

        virtualinvoke $stack5.<other.domain.Order: void setStatus(int)>($stack16);
/*182*/

        $stack17 = virtualinvoke order.<other.domain.Order: java.lang.String getTrainNumber()>();
/*183*/

        virtualinvoke $stack5.<other.domain.Order: void setTrainNumber(java.lang.String)>($stack17);
/*183*/

        $stack18 = virtualinvoke order.<other.domain.Order: java.lang.String getPrice()>();
/*184*/

        virtualinvoke $stack5.<other.domain.Order: void setPrice(java.lang.String)>($stack18);
/*184*/

        $stack19 = virtualinvoke order.<other.domain.Order: java.lang.String getContactsName()>();
/*185*/

        virtualinvoke $stack5.<other.domain.Order: void setContactsName(java.lang.String)>($stack19);
/*185*/

        $stack20 = virtualinvoke order.<other.domain.Order: java.lang.String getContactsDocumentNumber()>();
/*186*/

        virtualinvoke $stack5.<other.domain.Order: void setContactsDocumentNumber(java.lang.String)>($stack20);
/*186*/

        $stack21 = virtualinvoke order.<other.domain.Order: int getDocumentType()>();
/*187*/

        virtualinvoke $stack5.<other.domain.Order: void setDocumentType(int)>($stack21);
/*187*/

        $stack22 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*188*/

        interfaceinvoke $stack22.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>($stack5);
/*188*/

        $stack24 = <java.lang.System: java.io.PrintStream out>;
/*189*/

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service] Success.");
/*189*/

        virtualinvoke $stack6.<other.domain.ChangeOrderResult: void setOrder(other.domain.Order)>($stack5);
/*190*/

        virtualinvoke $stack6.<other.domain.ChangeOrderResult: void setStatus(boolean)>(1);
/*191*/

        virtualinvoke $stack6.<other.domain.ChangeOrderResult: void setMessage(java.lang.String)>("Success");
/*192*/

     label2:
        return $stack6;
/*194*/
    }

/*[coi]*/
    public other.domain.CancelOrderResult cancelOrder(other.domain.CancelOrderInfo)
    {
        java.io.PrintStream $stack13, $stack14;
        java.util.UUID $stack5;
        other.repository.OrderOtherRepository $stack6, $stack11;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack7;
        other.domain.OrderStatus $stack9;
        other.domain.CancelOrderInfo coi;
        int $stack10;
        other.domain.CancelOrderResult $stack8;

        this := @this: other.service.OrderOtherServiceImpl;

        coi := @parameter0: other.domain.CancelOrderInfo;

        $stack5 = virtualinvoke coi.<other.domain.CancelOrderInfo: java.util.UUID getOrderId()>();
/*199*/

        $stack6 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*200*/

        $stack7 = interfaceinvoke $stack6.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack5);
/*200*/

        $stack8 = new other.domain.CancelOrderResult;
/*201*/

        specialinvoke $stack8.<other.domain.CancelOrderResult: void <init>()>();
/*201*/

        if $stack7 != null goto label1;
/*202*/

        $stack14 = <java.lang.System: java.io.PrintStream out>;
/*203*/

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Cancel Order] Fail.Order not found.");
/*203*/

        virtualinvoke $stack8.<other.domain.CancelOrderResult: void setStatus(boolean)>(0);
/*204*/

        virtualinvoke $stack8.<other.domain.CancelOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*205*/

        virtualinvoke $stack8.<other.domain.CancelOrderResult: void setOrder(other.domain.Order)>(null);
/*206*/

        goto label2;
/*208*/

     label1:
        $stack9 = <other.domain.OrderStatus: other.domain.OrderStatus CANCEL>;
/*209*/

        $stack10 = virtualinvoke $stack9.<other.domain.OrderStatus: int getCode()>();
/*209*/

        virtualinvoke $stack7.<other.domain.Order: void setStatus(int)>($stack10);
/*209*/

        $stack11 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*210*/

        interfaceinvoke $stack11.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>($stack7);
/*210*/

        $stack13 = <java.lang.System: java.io.PrintStream out>;
/*211*/

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>("[Order Other Service][Cancel Order] Success.");
/*211*/

        virtualinvoke $stack8.<other.domain.CancelOrderResult: void setStatus(boolean)>(1);
/*212*/

        virtualinvoke $stack8.<other.domain.CancelOrderResult: void setMessage(java.lang.String)>("Success");
/*213*/

        virtualinvoke $stack8.<other.domain.CancelOrderResult: void setOrder(other.domain.Order)>($stack7);
/*214*/

     label2:
        return $stack8;
/*216*/
    }

/*[csti]*/
    public other.domain.CalculateSoldTicketResult queryAlreadySoldOrders(other.domain.CalculateSoldTicketInfo)
    {
        other.domain.OrderStatus $stack22;
        other.domain.CalculateSoldTicketResult $stack10;
        java.lang.StringBuilder $stack13, $stack16, $stack51, $stack54;
        java.util.ArrayList $stack9;
        other.domain.CalculateSoldTicketInfo csti;
        java.lang.String $stack8, $stack12, $stack17, $stack55;
        java.util.Date $stack7, $stack11;
        other.repository.OrderOtherRepository $stack6;
        other.service.OrderOtherServiceImpl this;
        other.domain.SeatClass $stack25, $stack28, $stack31, $stack34, $stack37, $stack40, $stack43, $stack46, $stack49;
        boolean $stack19;
        java.util.UUID $stack53;
        other.domain.Order order;
        int $stack15, $stack21, $stack23, $stack24, $stack26, $stack27, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $stack39, $stack41, $stack42, $stack44, $stack45, $stack47, $stack48, $stack50, $stack57, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74;
        java.io.PrintStream $stack14, $stack52;
        java.util.Iterator $stack18;
        java.lang.Object $stack20;

        this := @this: other.service.OrderOtherServiceImpl;

        csti := @parameter0: other.domain.CalculateSoldTicketInfo;

        $stack6 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*221*/

        $stack7 = virtualinvoke csti.<other.domain.CalculateSoldTicketInfo: java.util.Date getTravelDate()>();
/*221*/

        $stack8 = virtualinvoke csti.<other.domain.CalculateSoldTicketInfo: java.lang.String getTrainNumber()>();
/*221*/

        $stack9 = interfaceinvoke $stack6.<other.repository.OrderOtherRepository: java.util.ArrayList findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)>($stack7, $stack8);
/*221*/

        $stack10 = new other.domain.CalculateSoldTicketResult;
/*222*/

        specialinvoke $stack10.<other.domain.CalculateSoldTicketResult: void <init>()>();
/*222*/

        $stack11 = virtualinvoke csti.<other.domain.CalculateSoldTicketInfo: java.util.Date getTravelDate()>();
/*223*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setTravelDate(java.util.Date)>($stack11);
/*223*/

        $stack12 = virtualinvoke csti.<other.domain.CalculateSoldTicketInfo: java.lang.String getTrainNumber()>();
/*224*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setTrainNumber(java.lang.String)>($stack12);
/*224*/

        $stack14 = <java.lang.System: java.io.PrintStream out>;
/*225*/

        $stack13 = new java.lang.StringBuilder;
/*225*/

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Calculate Sold Ticket] Get Orders Number:");
/*225*/

        $stack15 = virtualinvoke $stack9.<java.util.ArrayList: int size()>();
/*225*/

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15);
/*225*/

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();
/*225*/

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack17);
/*225*/

        $stack18 = virtualinvoke $stack9.<java.util.ArrayList: java.util.Iterator iterator()>();
/*226*/

        goto label12;
/*226*/

     label01:
        $stack20 = interfaceinvoke $stack18.<java.util.Iterator: java.lang.Object next()>();
/*226*/

        order = (other.domain.Order) $stack20;
/*226*/

        $stack21 = virtualinvoke order.<other.domain.Order: int getStatus()>();
/*227*/

        $stack22 = <other.domain.OrderStatus: other.domain.OrderStatus CHANGE>;
/*227*/

        $stack23 = virtualinvoke $stack22.<other.domain.OrderStatus: int getCode()>();
/*227*/

        if $stack21 < $stack23 goto label02;
/*227*/

        goto label12;
/*228*/

     label02:
        $stack24 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack25 = <other.domain.SeatClass: other.domain.SeatClass NONE>;
/*230*/

        $stack26 = virtualinvoke $stack25.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack24 != $stack26 goto label03;
/*230*/

        $stack73 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getNoSeat()>();
/*231*/

        $stack74 = $stack73 + 1;
/*231*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setNoSeat(int)>($stack74);
/*231*/

        goto label12;
/*232*/

     label03:
        $stack27 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack28 = <other.domain.SeatClass: other.domain.SeatClass BUSINESS>;
/*230*/

        $stack29 = virtualinvoke $stack28.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack27 != $stack29 goto label04;
/*230*/

        $stack71 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getBusinessSeat()>();
/*233*/

        $stack72 = $stack71 + 1;
/*233*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setBusinessSeat(int)>($stack72);
/*233*/

        goto label12;
/*234*/

     label04:
        $stack30 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack31 = <other.domain.SeatClass: other.domain.SeatClass FIRSTCLASS>;
/*230*/

        $stack32 = virtualinvoke $stack31.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack30 != $stack32 goto label05;
/*230*/

        $stack69 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getFirstClassSeat()>();
/*235*/

        $stack70 = $stack69 + 1;
/*235*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setFirstClassSeat(int)>($stack70);
/*235*/

        goto label12;
/*236*/

     label05:
        $stack33 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack34 = <other.domain.SeatClass: other.domain.SeatClass SECONDCLASS>;
/*230*/

        $stack35 = virtualinvoke $stack34.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack33 != $stack35 goto label06;
/*230*/

        $stack67 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getSecondClassSeat()>();
/*237*/

        $stack68 = $stack67 + 1;
/*237*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setSecondClassSeat(int)>($stack68);
/*237*/

        goto label12;
/*238*/

     label06:
        $stack36 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack37 = <other.domain.SeatClass: other.domain.SeatClass HARDSEAT>;
/*230*/

        $stack38 = virtualinvoke $stack37.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack36 != $stack38 goto label07;
/*230*/

        $stack65 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getHardSeat()>();
/*239*/

        $stack66 = $stack65 + 1;
/*239*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setHardSeat(int)>($stack66);
/*239*/

        goto label12;
/*240*/

     label07:
        $stack39 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack40 = <other.domain.SeatClass: other.domain.SeatClass SOFTSEAT>;
/*230*/

        $stack41 = virtualinvoke $stack40.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack39 != $stack41 goto label08;
/*230*/

        $stack63 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getSoftSeat()>();
/*241*/

        $stack64 = $stack63 + 1;
/*241*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setSoftSeat(int)>($stack64);
/*241*/

        goto label12;
/*242*/

     label08:
        $stack42 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack43 = <other.domain.SeatClass: other.domain.SeatClass HARDBED>;
/*230*/

        $stack44 = virtualinvoke $stack43.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack42 != $stack44 goto label09;
/*230*/

        $stack61 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getHardBed()>();
/*243*/

        $stack62 = $stack61 + 1;
/*243*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setHardBed(int)>($stack62);
/*243*/

        goto label12;
/*244*/

     label09:
        $stack45 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack46 = <other.domain.SeatClass: other.domain.SeatClass SOFTBED>;
/*230*/

        $stack47 = virtualinvoke $stack46.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack45 != $stack47 goto label10;
/*230*/

        $stack59 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getSoftBed()>();
/*245*/

        $stack60 = $stack59 + 1;
/*245*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setSoftBed(int)>($stack60);
/*245*/

        goto label12;
/*246*/

     label10:
        $stack48 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*230*/

        $stack49 = <other.domain.SeatClass: other.domain.SeatClass HIGHSOFTBED>;
/*230*/

        $stack50 = virtualinvoke $stack49.<other.domain.SeatClass: int getCode()>();
/*230*/

        if $stack48 != $stack50 goto label11;
/*230*/

        $stack57 = virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: int getHighSoftBed()>();
/*247*/

        $stack58 = $stack57 + 1;
/*247*/

        virtualinvoke $stack10.<other.domain.CalculateSoldTicketResult: void setHighSoftBed(int)>($stack58);
/*247*/

        goto label12;
/*248*/

     label11:
        $stack52 = <java.lang.System: java.io.PrintStream out>;
/*249*/

        $stack51 = new java.lang.StringBuilder;
/*249*/

        specialinvoke $stack51.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Calculate Sold Tickets] Seat class not exists. Order ID:");
/*249*/

        $stack53 = virtualinvoke order.<other.domain.Order: java.util.UUID getId()>();
/*249*/

        $stack54 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack53);
/*249*/

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>();
/*249*/

        virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack55);
/*249*/

     label12:
        $stack19 = interfaceinvoke $stack18.<java.util.Iterator: boolean hasNext()>();
/*226*/

        if $stack19 != 0 goto label01;
/*226*/

        return $stack10;
/*252*/
    }

    public other.domain.QueryOrderResult getAllOrders()
    {
        other.domain.QueryOrderResult $stack5;
        other.repository.OrderOtherRepository $stack3;
        other.service.OrderOtherServiceImpl this;
        java.util.ArrayList $stack4;

        this := @this: other.service.OrderOtherServiceImpl;

        $stack3 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*257*/

        $stack4 = interfaceinvoke $stack3.<other.repository.OrderOtherRepository: java.util.ArrayList findAll()>();
/*257*/

        $stack5 = new other.domain.QueryOrderResult;
/*258*/

        specialinvoke $stack5.<other.domain.QueryOrderResult: void <init>(boolean,java.lang.String,java.util.ArrayList)>(1, "Success.", $stack4);
/*258*/

        return $stack5;
/*259*/
    }

/*[info]*/
    public other.domain.ModifyOrderStatusResult modifyOrder(other.domain.ModifyOrderStatusInfo)
    {
        other.domain.ModifyOrderStatusResult $stack8;
        java.util.UUID $stack6;
        other.repository.OrderOtherRepository $stack4, $stack10;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack7;
        int $stack9;
        other.domain.ModifyOrderStatusInfo info;
        java.lang.String $stack5;

        this := @this: other.service.OrderOtherServiceImpl;

        info := @parameter0: other.domain.ModifyOrderStatusInfo;

        $stack4 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*264*/

        $stack5 = virtualinvoke info.<other.domain.ModifyOrderStatusInfo: java.lang.String getOrderId()>();
/*264*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*264*/

        $stack7 = interfaceinvoke $stack4.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack6);
/*264*/

        $stack8 = new other.domain.ModifyOrderStatusResult;
/*265*/

        specialinvoke $stack8.<other.domain.ModifyOrderStatusResult: void <init>()>();
/*265*/

        if $stack7 != null goto label1;
/*266*/

        virtualinvoke $stack8.<other.domain.ModifyOrderStatusResult: void setStatus(boolean)>(0);
/*267*/

        virtualinvoke $stack8.<other.domain.ModifyOrderStatusResult: void setMessage(java.lang.String)>("Order Not Found");
/*268*/

        virtualinvoke $stack8.<other.domain.ModifyOrderStatusResult: void setOrder(other.domain.Order)>(null);
/*269*/

        goto label2;
/*270*/

     label1:
        $stack9 = virtualinvoke info.<other.domain.ModifyOrderStatusInfo: int getStatus()>();
/*271*/

        virtualinvoke $stack7.<other.domain.Order: void setStatus(int)>($stack9);
/*271*/

        $stack10 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*272*/

        interfaceinvoke $stack10.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>($stack7);
/*272*/

        virtualinvoke $stack8.<other.domain.ModifyOrderStatusResult: void setStatus(boolean)>(1);
/*273*/

        virtualinvoke $stack8.<other.domain.ModifyOrderStatusResult: void setMessage(java.lang.String)>("Success");
/*274*/

        virtualinvoke $stack8.<other.domain.ModifyOrderStatusResult: void setOrder(other.domain.Order)>($stack7);
/*275*/

     label2:
        return $stack8;
/*277*/
    }

/*[info]*/
    public other.domain.GetOrderPriceResult getOrderPrice(other.domain.GetOrderPrice)
    {
        java.io.PrintStream $stack10;
        other.domain.GetOrderPrice info;
        java.util.UUID $stack6;
        other.repository.OrderOtherRepository $stack4;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack7;
        other.domain.GetOrderPriceResult $stack8;
        java.lang.StringBuilder $stack9, $stack12;
        java.lang.String $stack5, $stack11, $stack13, $stack14;

        this := @this: other.service.OrderOtherServiceImpl;

        info := @parameter0: other.domain.GetOrderPrice;

        $stack4 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*282*/

        $stack5 = virtualinvoke info.<other.domain.GetOrderPrice: java.lang.String getOrderId()>();
/*282*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*282*/

        $stack7 = interfaceinvoke $stack4.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack6);
/*282*/

        $stack8 = new other.domain.GetOrderPriceResult;
/*283*/

        specialinvoke $stack8.<other.domain.GetOrderPriceResult: void <init>()>();
/*283*/

        if $stack8 != null goto label1;
/*284*/

        virtualinvoke $stack8.<other.domain.GetOrderPriceResult: void setStatus(boolean)>(0);
/*285*/

        virtualinvoke $stack8.<other.domain.GetOrderPriceResult: void setMessage(java.lang.String)>("Order Not Found");
/*286*/

        virtualinvoke $stack8.<other.domain.GetOrderPriceResult: void setPrice(java.lang.String)>("-1.0");
/*287*/

        goto label2;
/*288*/

     label1:
        virtualinvoke $stack8.<other.domain.GetOrderPriceResult: void setStatus(boolean)>(1);
/*289*/

        virtualinvoke $stack8.<other.domain.GetOrderPriceResult: void setMessage(java.lang.String)>("Success");
/*290*/

        $stack10 = <java.lang.System: java.io.PrintStream out>;
/*291*/

        $stack9 = new java.lang.StringBuilder;
/*291*/

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Other Service][Get Order Price] Price:");
/*291*/

        $stack11 = virtualinvoke $stack7.<other.domain.Order: java.lang.String getPrice()>();
/*291*/

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);
/*291*/

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();
/*291*/

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>($stack13);
/*291*/

        $stack14 = virtualinvoke $stack7.<other.domain.Order: java.lang.String getPrice()>();
/*292*/

        virtualinvoke $stack8.<other.domain.GetOrderPriceResult: void setPrice(java.lang.String)>($stack14);
/*292*/

     label2:
        return $stack8;
/*294*/
    }

/*[info]*/
    public other.domain.PayOrderResult payOrder(other.domain.PayOrderInfo)
    {
        java.util.UUID $stack6;
        other.repository.OrderOtherRepository $stack4, $stack11;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack7;
        other.domain.PayOrderResult $stack8;
        other.domain.OrderStatus $stack9;
        other.domain.PayOrderInfo info;
        int $stack10;
        java.lang.String $stack5;

        this := @this: other.service.OrderOtherServiceImpl;

        info := @parameter0: other.domain.PayOrderInfo;

        $stack4 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*299*/

        $stack5 = virtualinvoke info.<other.domain.PayOrderInfo: java.lang.String getOrderId()>();
/*299*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*299*/

        $stack7 = interfaceinvoke $stack4.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack6);
/*299*/

        $stack8 = new other.domain.PayOrderResult;
/*300*/

        specialinvoke $stack8.<other.domain.PayOrderResult: void <init>()>();
/*300*/

        if $stack8 != null goto label1;
/*301*/

        virtualinvoke $stack8.<other.domain.PayOrderResult: void setStatus(boolean)>(0);
/*302*/

        virtualinvoke $stack8.<other.domain.PayOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*303*/

        virtualinvoke $stack8.<other.domain.PayOrderResult: void setOrder(other.domain.Order)>(null);
/*304*/

        goto label2;
/*305*/

     label1:
        $stack9 = <other.domain.OrderStatus: other.domain.OrderStatus PAID>;
/*306*/

        $stack10 = virtualinvoke $stack9.<other.domain.OrderStatus: int getCode()>();
/*306*/

        virtualinvoke $stack7.<other.domain.Order: void setStatus(int)>($stack10);
/*306*/

        $stack11 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*307*/

        interfaceinvoke $stack11.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>($stack7);
/*307*/

        virtualinvoke $stack8.<other.domain.PayOrderResult: void setStatus(boolean)>(1);
/*308*/

        virtualinvoke $stack8.<other.domain.PayOrderResult: void setMessage(java.lang.String)>("Success.");
/*309*/

        virtualinvoke $stack8.<other.domain.PayOrderResult: void setOrder(other.domain.Order)>($stack7);
/*310*/

     label2:
        return $stack8;
/*312*/
    }

/*[info]*/
    public other.domain.GetOrderResult getOrderById(other.domain.GetOrderByIdInfo)
    {
        java.io.PrintStream tpLocal;
        other.domain.GetOrderByIdInfo info;
        other.domain.GetOrderResult $stack8;
        java.util.UUID $stack6;
        other.repository.OrderOtherRepository $stack4;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack7;
        int intLocal;
        java.lang.String $stack5, tmpString1, tmpString2;

        this := @this: other.service.OrderOtherServiceImpl;

        info := @parameter0: other.domain.GetOrderByIdInfo;

        tpLocal = <java.lang.System: java.io.PrintStream out>;

        $stack4 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*317*/

        $stack5 = virtualinvoke info.<other.domain.GetOrderByIdInfo: java.lang.String getOrderId()>();
/*317*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*317*/

        $stack7 = interfaceinvoke $stack4.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack6);
/*317*/

        intLocal = virtualinvoke $stack7.<other.domain.Order: int getStatus()>();

        tmpString1 = "$stack7.status=";

        tmpString2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(intLocal);

        tmpString1 = virtualinvoke tmpString1.<java.lang.String: java.lang.String concat(java.lang.String)>(tmpString2);

        virtualinvoke tpLocal.<java.io.PrintStream: void println(java.lang.String)>(tmpString1);

        $stack8 = new other.domain.GetOrderResult;
/*318*/

        specialinvoke $stack8.<other.domain.GetOrderResult: void <init>()>();
/*318*/

        if $stack7 != null goto label1;
/*319*/

        virtualinvoke $stack8.<other.domain.GetOrderResult: void setStatus(boolean)>(0);
/*320*/

        virtualinvoke $stack8.<other.domain.GetOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*321*/

        virtualinvoke $stack8.<other.domain.GetOrderResult: void setOrder(other.domain.Order)>(null);
/*322*/

        goto label2;
/*323*/

     label1:
        virtualinvoke $stack8.<other.domain.GetOrderResult: void setStatus(boolean)>(1);
/*324*/

        virtualinvoke $stack8.<other.domain.GetOrderResult: void setMessage(java.lang.String)>("Success.");
/*325*/

        virtualinvoke $stack8.<other.domain.GetOrderResult: void setOrder(other.domain.Order)>($stack7);
/*326*/

     label2:
        return $stack8;
/*328*/
    }

/*[info]*/
    public other.domain.GetOrderInfoForSecurityResult checkSecurityAboutOrder(other.domain.GetOrderInfoForSecurity)
    {
        java.util.Date $stack15, $stack17, $stack24;
        other.domain.GetOrderInfoForSecurityResult $u0;
        other.repository.OrderOtherRepository $stack11;
        other.service.OrderOtherServiceImpl this;
        java.util.ArrayList $stack14;
        other.domain.Order order;
        java.util.Calendar $stack16;
        other.domain.OrderStatus $stack22, $stack28, $stack33;
        int $stack21, $stack23, $stack27, $stack29, $stack32, $stack34, countOrderInOneHour, countTotalValidOrder, $i0;
        java.lang.String $stack12;
        other.domain.GetOrderInfoForSecurity info;
        boolean $stack25, $stack19;
        java.util.Iterator $stack18;
        java.util.UUID $stack13;
        java.lang.Object $stack20;

        this := @this: other.service.OrderOtherServiceImpl;

        info := @parameter0: other.domain.GetOrderInfoForSecurity;

        $u0 = new other.domain.GetOrderInfoForSecurityResult;
/*333*/

        specialinvoke $u0.<other.domain.GetOrderInfoForSecurityResult: void <init>()>();
/*333*/

        $stack11 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*334*/

        $stack12 = virtualinvoke info.<other.domain.GetOrderInfoForSecurity: java.lang.String getAccountId()>();
/*334*/

        $stack13 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack12);
/*334*/

        $stack14 = interfaceinvoke $stack11.<other.repository.OrderOtherRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack13);
/*334*/

        countOrderInOneHour = 0;
/*335*/

        countTotalValidOrder = 0;
/*336*/

        $stack15 = virtualinvoke info.<other.domain.GetOrderInfoForSecurity: java.util.Date getCheckDate()>();
/*337*/

        $stack16 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
/*338*/

        virtualinvoke $stack16.<java.util.Calendar: void setTime(java.util.Date)>($stack15);
/*339*/

        $i0 = (int) -1;

        virtualinvoke $stack16.<java.util.Calendar: void add(int,int)>(11, $i0);
/*340*/

        $stack17 = virtualinvoke $stack16.<java.util.Calendar: java.util.Date getTime()>();
/*341*/

        $stack18 = virtualinvoke $stack14.<java.util.ArrayList: java.util.Iterator iterator()>();
/*342*/

        goto label4;
/*342*/

     label1:
        $stack20 = interfaceinvoke $stack18.<java.util.Iterator: java.lang.Object next()>();
/*342*/

        order = (other.domain.Order) $stack20;
/*342*/

        $stack21 = virtualinvoke order.<other.domain.Order: int getStatus()>();
/*343*/

        $stack22 = <other.domain.OrderStatus: other.domain.OrderStatus NOTPAID>;
/*343*/

        $stack23 = virtualinvoke $stack22.<other.domain.OrderStatus: int getCode()>();
/*343*/

        if $stack21 == $stack23 goto label2;
/*343*/

        $stack27 = virtualinvoke order.<other.domain.Order: int getStatus()>();
/*344*/

        $stack28 = <other.domain.OrderStatus: other.domain.OrderStatus PAID>;
/*344*/

        $stack29 = virtualinvoke $stack28.<other.domain.OrderStatus: int getCode()>();
/*344*/

        if $stack27 == $stack29 goto label2;
/*344*/

        $stack32 = virtualinvoke order.<other.domain.Order: int getStatus()>();
/*345*/

        $stack33 = <other.domain.OrderStatus: other.domain.OrderStatus COLLECTED>;
/*345*/

        $stack34 = virtualinvoke $stack33.<other.domain.OrderStatus: int getCode()>();
/*345*/

        if $stack32 != $stack34 goto label3;
/*345*/

     label2:
        countTotalValidOrder = countTotalValidOrder + 1;
/*346*/

     label3:
        $stack24 = virtualinvoke order.<other.domain.Order: java.util.Date getBoughtDate()>();
/*348*/

        $stack25 = virtualinvoke $stack24.<java.util.Date: boolean after(java.util.Date)>($stack17);
/*348*/

        if $stack25 == 0 goto label4;
/*348*/

        countOrderInOneHour = countOrderInOneHour + 1;
/*349*/

     label4:
        $stack19 = interfaceinvoke $stack18.<java.util.Iterator: boolean hasNext()>();
/*342*/

        if $stack19 != 0 goto label1;
/*342*/

        virtualinvoke $u0.<other.domain.GetOrderInfoForSecurityResult: void setOrderNumInLastOneHour(int)>(countOrderInOneHour);
/*352*/

        virtualinvoke $u0.<other.domain.GetOrderInfoForSecurityResult: void setOrderNumOfValidOrder(int)>(countTotalValidOrder);
/*353*/

        return $u0;
/*354*/
    }

/*[info]*/
    public other.domain.DeleteOrderResult deleteOrder(other.domain.DeleteOrderInfo)
    {
        java.util.UUID $stack6;
        other.repository.OrderOtherRepository $stack7, $stack10;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order $stack8;
        other.domain.DeleteOrderInfo info;
        other.domain.DeleteOrderResult $stack9;
        java.lang.String $stack5;

        this := @this: other.service.OrderOtherServiceImpl;

        info := @parameter0: other.domain.DeleteOrderInfo;

        $stack5 = virtualinvoke info.<other.domain.DeleteOrderInfo: java.lang.String getOrderId()>();
/*359*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*359*/

        $stack7 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*360*/

        $stack8 = interfaceinvoke $stack7.<other.repository.OrderOtherRepository: other.domain.Order findById(java.util.UUID)>($stack6);
/*360*/

        $stack9 = new other.domain.DeleteOrderResult;
/*361*/

        specialinvoke $stack9.<other.domain.DeleteOrderResult: void <init>()>();
/*361*/

        if $stack8 != null goto label1;
/*362*/

        virtualinvoke $stack9.<other.domain.DeleteOrderResult: void setStatus(boolean)>(0);
/*363*/

        virtualinvoke $stack9.<other.domain.DeleteOrderResult: void setMessage(java.lang.String)>("Order Not Exist.");
/*364*/

        goto label2;
/*365*/

     label1:
        $stack10 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*366*/

        interfaceinvoke $stack10.<other.repository.OrderOtherRepository: void deleteById(java.util.UUID)>($stack6);
/*366*/

        virtualinvoke $stack9.<other.domain.DeleteOrderResult: void setStatus(boolean)>(1);
/*367*/

        virtualinvoke $stack9.<other.domain.DeleteOrderResult: void setMessage(java.lang.String)>("Success.");
/*368*/

     label2:
        return $stack9;
/*370*/
    }

/*[order]*/
    public other.domain.AddOrderResult addNewOrder(other.domain.Order)
    {
        other.repository.OrderOtherRepository $stack5, $stack11;
        other.service.OrderOtherServiceImpl this;
        java.util.ArrayList $stack7;
        other.domain.Order order;
        java.lang.String $stack16, $stack18;
        boolean $stack9;
        java.io.PrintStream $stack4, $stack13, $stack15, $stack19;
        other.domain.AddOrderResult $stack8;
        java.util.UUID $stack6, $stack10;
        java.lang.StringBuilder $stack14, $stack17;

        this := @this: other.service.OrderOtherServiceImpl;

        order := @parameter0: other.domain.Order;

        $stack4 = <java.lang.System: java.io.PrintStream out>;
/*375*/

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Add Order] Ready Add Order.");
/*375*/

        $stack5 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*376*/

        $stack6 = virtualinvoke order.<other.domain.Order: java.util.UUID getAccountId()>();
/*376*/

        $stack7 = interfaceinvoke $stack5.<other.repository.OrderOtherRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack6);
/*376*/

        $stack8 = new other.domain.AddOrderResult;
/*377*/

        specialinvoke $stack8.<other.domain.AddOrderResult: void <init>()>();
/*377*/

        $stack9 = virtualinvoke $stack7.<java.util.ArrayList: boolean contains(java.lang.Object)>(order);
/*378*/

        if $stack9 == 0 goto label1;
/*378*/

        $stack19 = <java.lang.System: java.io.PrintStream out>;
/*379*/

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Add Order] Fail.Order already exists.");
/*379*/

        virtualinvoke $stack8.<other.domain.AddOrderResult: void setStatus(boolean)>(0);
/*380*/

        virtualinvoke $stack8.<other.domain.AddOrderResult: void setMessage(java.lang.String)>("Order already exist");
/*381*/

        virtualinvoke $stack8.<other.domain.AddOrderResult: void setOrder(other.domain.Order)>(null);
/*382*/

        goto label2;
/*383*/

     label1:
        $stack10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();
/*384*/

        virtualinvoke order.<other.domain.Order: void setId(java.util.UUID)>($stack10);
/*384*/

        $stack11 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*385*/

        interfaceinvoke $stack11.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>(order);
/*385*/

        $stack13 = <java.lang.System: java.io.PrintStream out>;
/*386*/

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Add Order] Success.");
/*386*/

        $stack15 = <java.lang.System: java.io.PrintStream out>;
/*387*/

        $stack14 = new java.lang.StringBuilder;
/*387*/

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Admin Add Order] Price:");
/*387*/

        $stack16 = virtualinvoke order.<other.domain.Order: java.lang.String getPrice()>();
/*387*/

        $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);
/*387*/

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();
/*387*/

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>($stack18);
/*387*/

        virtualinvoke $stack8.<other.domain.AddOrderResult: void setStatus(boolean)>(1);
/*388*/

        virtualinvoke $stack8.<other.domain.AddOrderResult: void setMessage(java.lang.String)>("Success");
/*389*/

        virtualinvoke $stack8.<other.domain.AddOrderResult: void setOrder(other.domain.Order)>(order);
/*390*/

     label2:
        return $stack8;
/*392*/
    }

/*[order]*/
    public other.domain.UpdateOrderResult updateOrder(other.domain.Order)
    {
        java.util.Date $stack8, $stack9, $stack10;
        other.repository.OrderOtherRepository $stack22;
        other.service.OrderOtherServiceImpl this;
        other.domain.Order order, $stack5;
        int $stack11, $stack12, $stack16, $stack21;
        java.lang.String $stack13, $stack14, $stack15, $stack17, $stack18, $stack19, $stack20;
        java.io.PrintStream $stack24, $stack25;
        other.domain.UpdateOrderResult $stack6;
        java.util.UUID $stack4, $stack7;

        this := @this: other.service.OrderOtherServiceImpl;

        order := @parameter0: other.domain.Order;

        $stack4 = virtualinvoke order.<other.domain.Order: java.util.UUID getId()>();
/*397*/

        $stack5 = virtualinvoke this.<other.service.OrderOtherServiceImpl: other.domain.Order findOrderById(java.util.UUID)>($stack4);
/*397*/

        $stack6 = new other.domain.UpdateOrderResult;
/*398*/

        specialinvoke $stack6.<other.domain.UpdateOrderResult: void <init>()>();
/*398*/

        if $stack5 != null goto label1;
/*399*/

        $stack25 = <java.lang.System: java.io.PrintStream out>;
/*400*/

        virtualinvoke $stack25.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Update Order] Fail.Order not found.");
/*400*/

        virtualinvoke $stack6.<other.domain.UpdateOrderResult: void setStatus(boolean)>(0);
/*401*/

        virtualinvoke $stack6.<other.domain.UpdateOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*402*/

        virtualinvoke $stack6.<other.domain.UpdateOrderResult: void setOrder(other.domain.Order)>(null);
/*403*/

        goto label2;
/*404*/

     label1:
        $stack7 = virtualinvoke order.<other.domain.Order: java.util.UUID getAccountId()>();
/*405*/

        virtualinvoke $stack5.<other.domain.Order: void setAccountId(java.util.UUID)>($stack7);
/*405*/

        $stack8 = virtualinvoke order.<other.domain.Order: java.util.Date getBoughtDate()>();
/*406*/

        virtualinvoke $stack5.<other.domain.Order: void setBoughtDate(java.util.Date)>($stack8);
/*406*/

        $stack9 = virtualinvoke order.<other.domain.Order: java.util.Date getTravelDate()>();
/*407*/

        virtualinvoke $stack5.<other.domain.Order: void setTravelDate(java.util.Date)>($stack9);
/*407*/

        $stack10 = virtualinvoke order.<other.domain.Order: java.util.Date getTravelTime()>();
/*408*/

        virtualinvoke $stack5.<other.domain.Order: void setTravelTime(java.util.Date)>($stack10);
/*408*/

        $stack11 = virtualinvoke order.<other.domain.Order: int getCoachNumber()>();
/*409*/

        virtualinvoke $stack5.<other.domain.Order: void setCoachNumber(int)>($stack11);
/*409*/

        $stack12 = virtualinvoke order.<other.domain.Order: int getSeatClass()>();
/*410*/

        virtualinvoke $stack5.<other.domain.Order: void setSeatClass(int)>($stack12);
/*410*/

        $stack13 = virtualinvoke order.<other.domain.Order: java.lang.String getSeatNumber()>();
/*411*/

        virtualinvoke $stack5.<other.domain.Order: void setSeatNumber(java.lang.String)>($stack13);
/*411*/

        $stack14 = virtualinvoke order.<other.domain.Order: java.lang.String getFrom()>();
/*412*/

        virtualinvoke $stack5.<other.domain.Order: void setFrom(java.lang.String)>($stack14);
/*412*/

        $stack15 = virtualinvoke order.<other.domain.Order: java.lang.String getTo()>();
/*413*/

        virtualinvoke $stack5.<other.domain.Order: void setTo(java.lang.String)>($stack15);
/*413*/

        $stack16 = virtualinvoke order.<other.domain.Order: int getStatus()>();
/*414*/

        virtualinvoke $stack5.<other.domain.Order: void setStatus(int)>($stack16);
/*414*/

        $stack17 = virtualinvoke order.<other.domain.Order: java.lang.String getTrainNumber()>();
/*415*/

        virtualinvoke $stack5.<other.domain.Order: void setTrainNumber(java.lang.String)>($stack17);
/*415*/

        $stack18 = virtualinvoke order.<other.domain.Order: java.lang.String getPrice()>();
/*416*/

        virtualinvoke $stack5.<other.domain.Order: void setPrice(java.lang.String)>($stack18);
/*416*/

        $stack19 = virtualinvoke order.<other.domain.Order: java.lang.String getContactsName()>();
/*417*/

        virtualinvoke $stack5.<other.domain.Order: void setContactsName(java.lang.String)>($stack19);
/*417*/

        $stack20 = virtualinvoke order.<other.domain.Order: java.lang.String getContactsDocumentNumber()>();
/*418*/

        virtualinvoke $stack5.<other.domain.Order: void setContactsDocumentNumber(java.lang.String)>($stack20);
/*418*/

        $stack21 = virtualinvoke order.<other.domain.Order: int getDocumentType()>();
/*419*/

        virtualinvoke $stack5.<other.domain.Order: void setDocumentType(int)>($stack21);
/*419*/

        $stack22 = this.<other.service.OrderOtherServiceImpl: other.repository.OrderOtherRepository orderOtherRepository>;
/*420*/

        interfaceinvoke $stack22.<other.repository.OrderOtherRepository: java.lang.Object save(java.lang.Object)>($stack5);
/*420*/

        $stack24 = <java.lang.System: java.io.PrintStream out>;
/*421*/

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>("[Order Service] [Admin Update Order] Success.");
/*421*/

        virtualinvoke $stack6.<other.domain.UpdateOrderResult: void setOrder(other.domain.Order)>($stack5);
/*422*/

        virtualinvoke $stack6.<other.domain.UpdateOrderResult: void setStatus(boolean)>(1);
/*423*/

        virtualinvoke $stack6.<other.domain.UpdateOrderResult: void setMessage(java.lang.String)>("Success");
/*424*/

     label2:
        return $stack6;
/*426*/
    }
}
