public class order.service.OrderServiceImpl extends java.lang.Object implements order.service.OrderService
{
/*OrderServiceImpl.java*/
/*Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Lorg/springframework/stereotype/Service; without elements
*/
/*Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Lorg/springframework/beans/factory/annotation/Autowired; without elements
*/
    private order.repository.OrderRepository orderRepository;

    public void <init>()
    {
        order.service.OrderServiceImpl this;

        this := @this: order.service.OrderServiceImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();
/*10*/

        return;
/*10*/
    }

/*[seatRequest]*/
    public order.domain.LeftTicketInfo getSoldTickets(order.domain.SeatRequest)
    {
        order.domain.Ticket $stack15;
        java.util.Date $stack8;
        java.util.ArrayList $stack10;
        java.util.HashSet $stack11;
        order.domain.SeatRequest seatRequest;
        int $stack17;
        java.lang.String $stack9, $stack16, $stack18, $stack19;
        boolean $stack13;
        java.util.Iterator $stack12;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack7;
        java.lang.Object $stack14;
        order.domain.Order tempOrder;
        order.domain.LeftTicketInfo $stack22;

        this := @this: order.service.OrderServiceImpl;

        seatRequest := @parameter0: order.domain.SeatRequest;

        $stack7 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*17*/

        $stack8 = virtualinvoke seatRequest.<order.domain.SeatRequest: java.util.Date getTravelDate()>();
/*17*/

        $stack9 = virtualinvoke seatRequest.<order.domain.SeatRequest: java.lang.String getTrainNumber()>();
/*18*/

        $stack10 = interfaceinvoke $stack7.<order.repository.OrderRepository: java.util.ArrayList findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)>($stack8, $stack9);
/*17*/

        $stack11 = new java.util.HashSet;
/*19*/

        specialinvoke $stack11.<java.util.HashSet: void <init>()>();
/*19*/

        $stack12 = virtualinvoke $stack10.<java.util.ArrayList: java.util.Iterator iterator()>();
/*20*/

        goto label2;
/*20*/

     label1:
        $stack14 = interfaceinvoke $stack12.<java.util.Iterator: java.lang.Object next()>();
/*20*/

        tempOrder = (order.domain.Order) $stack14;
/*20*/

        $stack15 = new order.domain.Ticket;
/*21*/

        specialinvoke $stack15.<order.domain.Ticket: void <init>()>();
/*21*/

        $stack16 = virtualinvoke tempOrder.<order.domain.Order: java.lang.String getSeatNumber()>();
/*22*/

        $stack17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($stack16);
/*22*/

        virtualinvoke $stack15.<order.domain.Ticket: void setSeatNo(int)>($stack17);
/*22*/

        $stack18 = virtualinvoke tempOrder.<order.domain.Order: java.lang.String getFrom()>();
/*23*/

        virtualinvoke $stack15.<order.domain.Ticket: void setStartStation(java.lang.String)>($stack18);
/*23*/

        $stack19 = virtualinvoke tempOrder.<order.domain.Order: java.lang.String getTo()>();
/*24*/

        virtualinvoke $stack15.<order.domain.Ticket: void setDestStation(java.lang.String)>($stack19);
/*24*/

        interfaceinvoke $stack11.<java.util.Set: boolean add(java.lang.Object)>($stack15);
/*25*/

     label2:
        $stack13 = interfaceinvoke $stack12.<java.util.Iterator: boolean hasNext()>();
/*20*/

        if $stack13 != 0 goto label1;
/*20*/

        $stack22 = new order.domain.LeftTicketInfo;
/*27*/

        specialinvoke $stack22.<order.domain.LeftTicketInfo: void <init>()>();
/*27*/

        virtualinvoke $stack22.<order.domain.LeftTicketInfo: void setSoldTickets(java.util.Set)>($stack11);
/*28*/

        return $stack22;
/*29*/
    }

/*[id]*/
    public order.domain.Order findOrderById(java.util.UUID)
    {
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack2;
        java.util.UUID id;
        order.domain.Order $stack3;

        this := @this: order.service.OrderServiceImpl;

        id := @parameter0: java.util.UUID;

        $stack2 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*34*/

        $stack3 = interfaceinvoke $stack2.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>(id);
/*34*/

        return $stack3;
/*34*/
    }

/*[order]*/
    public order.domain.CreateOrderResult create(order.domain.Order)
    {
        java.util.ArrayList $stack7;
        java.lang.String $stack16, $stack18;
        boolean $stack9;
        java.io.PrintStream $stack4, $stack13, $stack15, $stack19;
        order.domain.CreateOrderResult $stack8;
        java.util.UUID $stack6, $stack10;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack5, $stack11;
        java.lang.StringBuilder $stack14, $stack17;
        order.domain.Order order;

        this := @this: order.service.OrderServiceImpl;

        order := @parameter0: order.domain.Order;

        $stack4 = <java.lang.System: java.io.PrintStream out>;
/*39*/

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Create Order] Ready Create Order.");
/*39*/

        $stack5 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*40*/

        $stack6 = virtualinvoke order.<order.domain.Order: java.util.UUID getAccountId()>();
/*40*/

        $stack7 = interfaceinvoke $stack5.<order.repository.OrderRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack6);
/*40*/

        $stack8 = new order.domain.CreateOrderResult;
/*41*/

        specialinvoke $stack8.<order.domain.CreateOrderResult: void <init>()>();
/*41*/

        $stack9 = virtualinvoke $stack7.<java.util.ArrayList: boolean contains(java.lang.Object)>(order);
/*42*/

        if $stack9 == 0 goto label1;
/*42*/

        $stack19 = <java.lang.System: java.io.PrintStream out>;
/*43*/

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Order Create] Fail.Order already exists.");
/*43*/

        virtualinvoke $stack8.<order.domain.CreateOrderResult: void setStatus(boolean)>(0);
/*44*/

        virtualinvoke $stack8.<order.domain.CreateOrderResult: void setMessage(java.lang.String)>("Order already exist");
/*45*/

        virtualinvoke $stack8.<order.domain.CreateOrderResult: void setOrder(order.domain.Order)>(null);
/*46*/

        goto label2;
/*47*/

     label1:
        $stack10 = virtualinvoke order.<order.domain.Order: java.util.UUID getId()>();
/*48*/

        virtualinvoke order.<order.domain.Order: void setId(java.util.UUID)>($stack10);
/*48*/

        $stack11 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*49*/

        interfaceinvoke $stack11.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(order);
/*49*/

        $stack13 = <java.lang.System: java.io.PrintStream out>;
/*50*/

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Order Create] Success.");
/*50*/

        $stack15 = <java.lang.System: java.io.PrintStream out>;
/*51*/

        $stack14 = new java.lang.StringBuilder;
/*51*/

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Order Create] Price:");
/*51*/

        $stack16 = virtualinvoke order.<order.domain.Order: java.lang.String getPrice()>();
/*51*/

        $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);
/*51*/

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();
/*51*/

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>($stack18);
/*51*/

        virtualinvoke $stack8.<order.domain.CreateOrderResult: void setStatus(boolean)>(1);
/*52*/

        virtualinvoke $stack8.<order.domain.CreateOrderResult: void setMessage(java.lang.String)>("Success");
/*53*/

        virtualinvoke $stack8.<order.domain.CreateOrderResult: void setOrder(order.domain.Order)>(order);
/*54*/

     label2:
        return $stack8;
/*56*/
    }

/*[oai]*/
    public order.domain.OrderAlterResult alterOrder(order.domain.OrderAlterInfo)
    {
        order.domain.CreateOrderResult $stack16;
        java.io.PrintStream $stack19, $stack21;
        java.util.UUID $stack8, $stack14;
        order.service.OrderServiceImpl this;
        order.domain.OrderAlterResult $stack7;
        int $stack11;
        order.domain.OrderStatus $stack10;
        java.lang.String $stack18;
        order.domain.Order $stack9, $stack13, $stack15;
        order.domain.OrderAlterInfo oai;
        boolean $stack17;

        this := @this: order.service.OrderServiceImpl;

        oai := @parameter0: order.domain.OrderAlterInfo;

        $stack7 = new order.domain.OrderAlterResult;
/*61*/

        specialinvoke $stack7.<order.domain.OrderAlterResult: void <init>()>();
/*61*/

        $stack8 = virtualinvoke oai.<order.domain.OrderAlterInfo: java.util.UUID getPreviousOrderId()>();
/*62*/

        $stack9 = virtualinvoke this.<order.service.OrderServiceImpl: order.domain.Order findOrderById(java.util.UUID)>($stack8);
/*63*/

        if $stack9 != null goto label1;
/*64*/

        $stack21 = <java.lang.System: java.io.PrintStream out>;
/*65*/

        virtualinvoke $stack21.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Alter Order] Fail.Order do not exist.");
/*65*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setStatus(boolean)>(0);
/*66*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setMessage(java.lang.String)>("Old Order Does Not Exists");
/*67*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setOldOrder(order.domain.Order)>(null);
/*68*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setNewOrder(order.domain.Order)>(null);
/*69*/

        return $stack7;
/*70*/

     label1:
        $stack10 = <order.domain.OrderStatus: order.domain.OrderStatus CANCEL>;
/*72*/

        $stack11 = virtualinvoke $stack10.<order.domain.OrderStatus: int getCode()>();
/*72*/

        virtualinvoke $stack9.<order.domain.Order: void setStatus(int)>($stack11);
/*72*/

        virtualinvoke this.<order.service.OrderServiceImpl: order.domain.ChangeOrderResult saveChanges(order.domain.Order)>($stack9);
/*73*/

        $stack13 = virtualinvoke oai.<order.domain.OrderAlterInfo: order.domain.Order getNewOrderInfo()>();
/*74*/

        $stack14 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();
/*75*/

        virtualinvoke $stack13.<order.domain.Order: void setId(java.util.UUID)>($stack14);
/*75*/

        $stack15 = virtualinvoke oai.<order.domain.OrderAlterInfo: order.domain.Order getNewOrderInfo()>();
/*76*/

        $stack16 = virtualinvoke this.<order.service.OrderServiceImpl: order.domain.CreateOrderResult create(order.domain.Order)>($stack15);
/*76*/

        $stack17 = virtualinvoke $stack16.<order.domain.CreateOrderResult: boolean isStatus()>();
/*77*/

        if $stack17 == 0 goto label2;
/*77*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setStatus(boolean)>(1);
/*78*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setMessage(java.lang.String)>("Success");
/*79*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setOldOrder(order.domain.Order)>($stack9);
/*80*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setNewOrder(order.domain.Order)>($stack13);
/*81*/

        $stack19 = <java.lang.System: java.io.PrintStream out>;
/*82*/

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Alter Order] Success.");
/*82*/

        goto label3;
/*83*/

     label2:
        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setStatus(boolean)>(0);
/*84*/

        $stack18 = virtualinvoke $stack16.<order.domain.CreateOrderResult: java.lang.String getMessage()>();
/*85*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setMessage(java.lang.String)>($stack18);
/*85*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setOldOrder(order.domain.Order)>(null);
/*86*/

        virtualinvoke $stack7.<order.domain.OrderAlterResult: void setNewOrder(order.domain.Order)>(null);
/*87*/

     label3:
        return $stack7;
/*89*/
    }

/*Signature: (Lorder/domain/QueryInfo;Ljava/lang/String;)Ljava/util/ArrayList<Lorder/domain/Order;>;*/
/*[qi, accountId]*/
    public java.util.ArrayList queryOrders(order.domain.QueryInfo, java.lang.String)
    {
        java.util.Date $stack33, $stack34, $stack38, $stack39, $stack42, $stack43, $stack47, $stack48;
        boolean $stack18, $stack21, statePassFlag, boughtDatePassFlag, travelDatePassFlag, $stack23, $stack25, $stack27, $stack35, $stack40, $stack44, $stack49, $stack60, $stack62;
        order.domain.QueryInfo qi;
        java.util.UUID $stack11;
        java.lang.StringBuilder $stack13, $stack16, $stack55, $stack58, $stack63, $stack66;
        java.util.ArrayList $stack12, $stack19, finalList;
        int $stack15, $stack51, $stack52, $stack57, $stack65;
        java.lang.String accountId, $stack17, $stack59, $stack67;
        java.io.PrintStream $stack14, $stack24, $stack26, $stack28, $stack29, $stack56, $stack64;
        java.util.Iterator $stack20, l6;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack10;
        java.lang.Object $stack22;
        order.domain.Order tempOrder;

        this := @this: order.service.OrderServiceImpl;

        qi := @parameter0: order.domain.QueryInfo;

        accountId := @parameter1: java.lang.String;

        $stack10 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*95*/

        $stack11 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(accountId);
/*95*/

        $stack12 = interfaceinvoke $stack10.<order.repository.OrderRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack11);
/*95*/

        $stack14 = <java.lang.System: java.io.PrintStream out>;
/*96*/

        $stack13 = new java.lang.StringBuilder;
/*96*/

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Query Order][Step 1] Get Orders Number of Account:");
/*96*/

        $stack15 = virtualinvoke $stack12.<java.util.ArrayList: int size()>();
/*96*/

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15);
/*96*/

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();
/*96*/

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack17);
/*96*/

        $stack18 = virtualinvoke qi.<order.domain.QueryInfo: boolean isEnableStateQuery()>();
/*98*/

        if $stack18 != 0 goto label01;
/*98*/

        $stack60 = virtualinvoke qi.<order.domain.QueryInfo: boolean isEnableBoughtDateQuery()>();
/*98*/

        if $stack60 != 0 goto label01;
/*98*/

        $stack62 = virtualinvoke qi.<order.domain.QueryInfo: boolean isEnableTravelDateQuery()>();
/*98*/

        if $stack62 == 0 goto label14;
/*98*/

     label01:
        $stack19 = new java.util.ArrayList;
/*99*/

        specialinvoke $stack19.<java.util.ArrayList: void <init>()>();
/*99*/

        finalList = $stack19;
/*99*/

        $stack20 = virtualinvoke $stack12.<java.util.ArrayList: java.util.Iterator iterator()>();
/*100*/

        l6 = $stack20;
/*100*/

        goto label13;
/*100*/

     label02:
        $stack22 = interfaceinvoke $stack20.<java.util.Iterator: java.lang.Object next()>();
/*100*/

        tempOrder = (order.domain.Order) $stack22;
/*100*/

        $stack23 = virtualinvoke qi.<order.domain.QueryInfo: boolean isEnableStateQuery()>();
/*105*/

        if $stack23 == 0 goto label04;
/*105*/

        $stack51 = virtualinvoke tempOrder.<order.domain.Order: int getStatus()>();
/*106*/

        $stack52 = virtualinvoke qi.<order.domain.QueryInfo: int getState()>();
/*106*/

        if $stack51 == $stack52 goto label03;
/*106*/

        statePassFlag = 0;
/*107*/

        goto label05;
/*108*/

     label03:
        statePassFlag = 1;
/*109*/

        goto label05;
/*111*/

     label04:
        statePassFlag = 1;
/*112*/

     label05:
        $stack24 = <java.lang.System: java.io.PrintStream out>;
/*114*/

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Query Order][Step 2][Check Status Fits End]");
/*114*/

        $stack25 = virtualinvoke qi.<order.domain.QueryInfo: boolean isEnableTravelDateQuery()>();
/*116*/

        if $stack25 == 0 goto label07;
/*116*/

        $stack42 = virtualinvoke tempOrder.<order.domain.Order: java.util.Date getTravelDate()>();
/*117*/

        $stack43 = virtualinvoke qi.<order.domain.QueryInfo: java.util.Date getTravelDateEnd()>();
/*117*/

        $stack44 = virtualinvoke $stack42.<java.util.Date: boolean before(java.util.Date)>($stack43);
/*117*/

        if $stack44 == 0 goto label06;
/*117*/

        $stack47 = virtualinvoke tempOrder.<order.domain.Order: java.util.Date getTravelDate()>();
/*118*/

        $stack48 = virtualinvoke qi.<order.domain.QueryInfo: java.util.Date getBoughtDateStart()>();
/*118*/

        $stack49 = virtualinvoke $stack47.<java.util.Date: boolean after(java.util.Date)>($stack48);
/*118*/

        if $stack49 == 0 goto label06;
/*118*/

        travelDatePassFlag = 1;
/*119*/

        goto label08;
/*120*/

     label06:
        travelDatePassFlag = 0;
/*121*/

        goto label08;
/*123*/

     label07:
        travelDatePassFlag = 1;
/*124*/

     label08:
        $stack26 = <java.lang.System: java.io.PrintStream out>;
/*126*/

        virtualinvoke $stack26.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Query Order][Step 2][Check Travel Date End]");
/*126*/

        $stack27 = virtualinvoke qi.<order.domain.QueryInfo: boolean isEnableBoughtDateQuery()>();
/*128*/

        if $stack27 == 0 goto label10;
/*128*/

        $stack33 = virtualinvoke tempOrder.<order.domain.Order: java.util.Date getBoughtDate()>();
/*129*/

        $stack34 = virtualinvoke qi.<order.domain.QueryInfo: java.util.Date getBoughtDateEnd()>();
/*129*/

        $stack35 = virtualinvoke $stack33.<java.util.Date: boolean before(java.util.Date)>($stack34);
/*129*/

        if $stack35 == 0 goto label09;
/*129*/

        $stack38 = virtualinvoke tempOrder.<order.domain.Order: java.util.Date getBoughtDate()>();
/*130*/

        $stack39 = virtualinvoke qi.<order.domain.QueryInfo: java.util.Date getBoughtDateStart()>();
/*130*/

        $stack40 = virtualinvoke $stack38.<java.util.Date: boolean after(java.util.Date)>($stack39);
/*130*/

        if $stack40 == 0 goto label09;
/*130*/

        boughtDatePassFlag = 1;
/*131*/

        goto label11;
/*132*/

     label09:
        boughtDatePassFlag = 0;
/*133*/

        goto label11;
/*135*/

     label10:
        boughtDatePassFlag = 1;
/*136*/

     label11:
        $stack28 = <java.lang.System: java.io.PrintStream out>;
/*138*/

        virtualinvoke $stack28.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Query Order][Step 2][Check Bought Date End]");
/*138*/

        if statePassFlag == 0 goto label12;
/*140*/

        if boughtDatePassFlag == 0 goto label12;
/*140*/

        if travelDatePassFlag == 0 goto label12;
/*140*/

        virtualinvoke $stack19.<java.util.ArrayList: boolean add(java.lang.Object)>(tempOrder);
/*141*/

     label12:
        $stack29 = <java.lang.System: java.io.PrintStream out>;
/*143*/

        virtualinvoke $stack29.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Query Order][Step 2][Check All Requirement End]");
/*143*/

     label13:
        $stack21 = interfaceinvoke $stack20.<java.util.Iterator: boolean hasNext()>();
/*100*/

        if $stack21 != 0 goto label02;
/*100*/

        $stack56 = <java.lang.System: java.io.PrintStream out>;
/*145*/

        $stack55 = new java.lang.StringBuilder;
/*145*/

        specialinvoke $stack55.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Query Order] Get order num:");
/*145*/

        $stack57 = virtualinvoke $stack19.<java.util.ArrayList: int size()>();
/*145*/

        $stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack57);
/*145*/

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>();
/*145*/

        virtualinvoke $stack56.<java.io.PrintStream: void println(java.lang.String)>($stack59);
/*145*/

        return $stack19;
/*146*/

     label14:
        $stack64 = <java.lang.System: java.io.PrintStream out>;
/*148*/

        $stack63 = new java.lang.StringBuilder;
/*148*/

        specialinvoke $stack63.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Query Order] Get order num:");
/*148*/

        $stack65 = virtualinvoke $stack12.<java.util.ArrayList: int size()>();
/*148*/

        $stack66 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack65);
/*148*/

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>();
/*148*/

        virtualinvoke $stack64.<java.io.PrintStream: void println(java.lang.String)>($stack67);
/*148*/

        return $stack12;
/*149*/
    }

/*[order]*/
    public order.domain.ChangeOrderResult saveChanges(order.domain.Order)
    {
        java.util.Date $stack8, $stack9, $stack10;
        int $stack11, $stack12, $stack16, $stack21;
        java.lang.String $stack13, $stack14, $stack15, $stack17, $stack18, $stack19, $stack20;
        java.io.PrintStream $stack24, $stack25;
        java.util.UUID $stack4, $stack7;
        order.domain.ChangeOrderResult $stack6;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack22;
        order.domain.Order order, $stack5;

        this := @this: order.service.OrderServiceImpl;

        order := @parameter0: order.domain.Order;

        $stack4 = virtualinvoke order.<order.domain.Order: java.util.UUID getId()>();
/*155*/

        $stack5 = virtualinvoke this.<order.service.OrderServiceImpl: order.domain.Order findOrderById(java.util.UUID)>($stack4);
/*155*/

        $stack6 = new order.domain.ChangeOrderResult;
/*156*/

        specialinvoke $stack6.<order.domain.ChangeOrderResult: void <init>()>();
/*156*/

        if $stack5 != null goto label1;
/*157*/

        $stack25 = <java.lang.System: java.io.PrintStream out>;
/*158*/

        virtualinvoke $stack25.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Modify Order] Fail.Order not found.");
/*158*/

        virtualinvoke $stack6.<order.domain.ChangeOrderResult: void setStatus(boolean)>(0);
/*159*/

        virtualinvoke $stack6.<order.domain.ChangeOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*160*/

        virtualinvoke $stack6.<order.domain.ChangeOrderResult: void setOrder(order.domain.Order)>(null);
/*161*/

        goto label2;
/*162*/

     label1:
        $stack7 = virtualinvoke order.<order.domain.Order: java.util.UUID getAccountId()>();
/*163*/

        virtualinvoke $stack5.<order.domain.Order: void setAccountId(java.util.UUID)>($stack7);
/*163*/

        $stack8 = virtualinvoke order.<order.domain.Order: java.util.Date getBoughtDate()>();
/*164*/

        virtualinvoke $stack5.<order.domain.Order: void setBoughtDate(java.util.Date)>($stack8);
/*164*/

        $stack9 = virtualinvoke order.<order.domain.Order: java.util.Date getTravelDate()>();
/*165*/

        virtualinvoke $stack5.<order.domain.Order: void setTravelDate(java.util.Date)>($stack9);
/*165*/

        $stack10 = virtualinvoke order.<order.domain.Order: java.util.Date getTravelTime()>();
/*166*/

        virtualinvoke $stack5.<order.domain.Order: void setTravelTime(java.util.Date)>($stack10);
/*166*/

        $stack11 = virtualinvoke order.<order.domain.Order: int getCoachNumber()>();
/*167*/

        virtualinvoke $stack5.<order.domain.Order: void setCoachNumber(int)>($stack11);
/*167*/

        $stack12 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*168*/

        virtualinvoke $stack5.<order.domain.Order: void setSeatClass(int)>($stack12);
/*168*/

        $stack13 = virtualinvoke order.<order.domain.Order: java.lang.String getSeatNumber()>();
/*169*/

        virtualinvoke $stack5.<order.domain.Order: void setSeatNumber(java.lang.String)>($stack13);
/*169*/

        $stack14 = virtualinvoke order.<order.domain.Order: java.lang.String getFrom()>();
/*170*/

        virtualinvoke $stack5.<order.domain.Order: void setFrom(java.lang.String)>($stack14);
/*170*/

        $stack15 = virtualinvoke order.<order.domain.Order: java.lang.String getTo()>();
/*171*/

        virtualinvoke $stack5.<order.domain.Order: void setTo(java.lang.String)>($stack15);
/*171*/

        $stack16 = virtualinvoke order.<order.domain.Order: int getStatus()>();
/*172*/

        virtualinvoke $stack5.<order.domain.Order: void setStatus(int)>($stack16);
/*172*/

        $stack17 = virtualinvoke order.<order.domain.Order: java.lang.String getTrainNumber()>();
/*173*/

        virtualinvoke $stack5.<order.domain.Order: void setTrainNumber(java.lang.String)>($stack17);
/*173*/

        $stack18 = virtualinvoke order.<order.domain.Order: java.lang.String getPrice()>();
/*174*/

        virtualinvoke $stack5.<order.domain.Order: void setPrice(java.lang.String)>($stack18);
/*174*/

        $stack19 = virtualinvoke order.<order.domain.Order: java.lang.String getContactsName()>();
/*175*/

        virtualinvoke $stack5.<order.domain.Order: void setContactsName(java.lang.String)>($stack19);
/*175*/

        $stack20 = virtualinvoke order.<order.domain.Order: java.lang.String getContactsDocumentNumber()>();
/*176*/

        virtualinvoke $stack5.<order.domain.Order: void setContactsDocumentNumber(java.lang.String)>($stack20);
/*176*/

        $stack21 = virtualinvoke order.<order.domain.Order: int getDocumentType()>();
/*177*/

        virtualinvoke $stack5.<order.domain.Order: void setDocumentType(int)>($stack21);
/*177*/

        $stack22 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*178*/

        interfaceinvoke $stack22.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($stack5);
/*178*/

        $stack24 = <java.lang.System: java.io.PrintStream out>;
/*179*/

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>("[Order Service] Success.");
/*179*/

        virtualinvoke $stack6.<order.domain.ChangeOrderResult: void setOrder(order.domain.Order)>($stack5);
/*180*/

        virtualinvoke $stack6.<order.domain.ChangeOrderResult: void setStatus(boolean)>(1);
/*181*/

        virtualinvoke $stack6.<order.domain.ChangeOrderResult: void setMessage(java.lang.String)>("Success");
/*182*/

     label2:
        return $stack6;
/*184*/
    }

/*[coi]*/
    public order.domain.CancelOrderResult cancelOrder(order.domain.CancelOrderInfo)
    {
        java.io.PrintStream $stack13, $stack14;
        order.domain.CancelOrderInfo coi;
        java.util.UUID $stack5;
        order.service.OrderServiceImpl this;
        order.domain.CancelOrderResult $stack8;
        order.repository.OrderRepository $stack6, $stack11;
        int $stack10;
        order.domain.OrderStatus $stack9;
        order.domain.Order $stack7;

        this := @this: order.service.OrderServiceImpl;

        coi := @parameter0: order.domain.CancelOrderInfo;

        $stack5 = virtualinvoke coi.<order.domain.CancelOrderInfo: java.util.UUID getOrderId()>();
/*189*/

        $stack6 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*190*/

        $stack7 = interfaceinvoke $stack6.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack5);
/*190*/

        $stack8 = new order.domain.CancelOrderResult;
/*191*/

        specialinvoke $stack8.<order.domain.CancelOrderResult: void <init>()>();
/*191*/

        if $stack7 != null goto label1;
/*192*/

        $stack14 = <java.lang.System: java.io.PrintStream out>;
/*193*/

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>("[Cancel Service][Cancel Order] Fail.Order not found.");
/*193*/

        virtualinvoke $stack8.<order.domain.CancelOrderResult: void setStatus(boolean)>(0);
/*194*/

        virtualinvoke $stack8.<order.domain.CancelOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*195*/

        virtualinvoke $stack8.<order.domain.CancelOrderResult: void setOrder(order.domain.Order)>(null);
/*196*/

        goto label2;
/*198*/

     label1:
        $stack9 = <order.domain.OrderStatus: order.domain.OrderStatus CANCEL>;
/*199*/

        $stack10 = virtualinvoke $stack9.<order.domain.OrderStatus: int getCode()>();
/*199*/

        virtualinvoke $stack7.<order.domain.Order: void setStatus(int)>($stack10);
/*199*/

        $stack11 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*200*/

        interfaceinvoke $stack11.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($stack7);
/*200*/

        $stack13 = <java.lang.System: java.io.PrintStream out>;
/*201*/

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>("[Cancel Service][Cancel Order] Success.");
/*201*/

        virtualinvoke $stack8.<order.domain.CancelOrderResult: void setStatus(boolean)>(1);
/*202*/

        virtualinvoke $stack8.<order.domain.CancelOrderResult: void setMessage(java.lang.String)>("Success");
/*203*/

        virtualinvoke $stack8.<order.domain.CancelOrderResult: void setOrder(order.domain.Order)>($stack7);
/*204*/

     label2:
        return $stack8;
/*206*/
    }

/*[csti]*/
    public order.domain.CalculateSoldTicketResult queryAlreadySoldOrders(order.domain.CalculateSoldTicketInfo)
    {
        order.domain.CalculateSoldTicketResult $stack10;
        java.lang.StringBuilder $stack13, $stack16, $stack51, $stack54;
        java.util.ArrayList $stack9;
        java.lang.String $stack8, $stack12, $stack17, $stack55;
        order.domain.CalculateSoldTicketInfo csti;
        order.repository.OrderRepository $stack6;
        java.util.Date $stack7, $stack11;
        order.domain.OrderStatus $stack22;
        boolean $stack19;
        java.util.UUID $stack53;
        int $stack15, $stack21, $stack23, $stack24, $stack26, $stack27, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $stack39, $stack41, $stack42, $stack44, $stack45, $stack47, $stack48, $stack50, $stack57, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74;
        java.io.PrintStream $stack14, $stack52;
        java.util.Iterator $stack18;
        order.domain.SeatClass $stack25, $stack28, $stack31, $stack34, $stack37, $stack40, $stack43, $stack46, $stack49;
        order.service.OrderServiceImpl this;
        java.lang.Object $stack20;
        order.domain.Order order;

        this := @this: order.service.OrderServiceImpl;

        csti := @parameter0: order.domain.CalculateSoldTicketInfo;

        $stack6 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*211*/

        $stack7 = virtualinvoke csti.<order.domain.CalculateSoldTicketInfo: java.util.Date getTravelDate()>();
/*211*/

        $stack8 = virtualinvoke csti.<order.domain.CalculateSoldTicketInfo: java.lang.String getTrainNumber()>();
/*211*/

        $stack9 = interfaceinvoke $stack6.<order.repository.OrderRepository: java.util.ArrayList findByTravelDateAndTrainNumber(java.util.Date,java.lang.String)>($stack7, $stack8);
/*211*/

        $stack10 = new order.domain.CalculateSoldTicketResult;
/*212*/

        specialinvoke $stack10.<order.domain.CalculateSoldTicketResult: void <init>()>();
/*212*/

        $stack11 = virtualinvoke csti.<order.domain.CalculateSoldTicketInfo: java.util.Date getTravelDate()>();
/*213*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setTravelDate(java.util.Date)>($stack11);
/*213*/

        $stack12 = virtualinvoke csti.<order.domain.CalculateSoldTicketInfo: java.lang.String getTrainNumber()>();
/*214*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setTrainNumber(java.lang.String)>($stack12);
/*214*/

        $stack14 = <java.lang.System: java.io.PrintStream out>;
/*215*/

        $stack13 = new java.lang.StringBuilder;
/*215*/

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Calculate Sold Ticket] Get Orders Number:");
/*215*/

        $stack15 = virtualinvoke $stack9.<java.util.ArrayList: int size()>();
/*215*/

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15);
/*215*/

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();
/*215*/

        virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack17);
/*215*/

        $stack18 = virtualinvoke $stack9.<java.util.ArrayList: java.util.Iterator iterator()>();
/*216*/

        goto label12;
/*216*/

     label01:
        $stack20 = interfaceinvoke $stack18.<java.util.Iterator: java.lang.Object next()>();
/*216*/

        order = (order.domain.Order) $stack20;
/*216*/

        $stack21 = virtualinvoke order.<order.domain.Order: int getStatus()>();
/*217*/

        $stack22 = <order.domain.OrderStatus: order.domain.OrderStatus CHANGE>;
/*217*/

        $stack23 = virtualinvoke $stack22.<order.domain.OrderStatus: int getCode()>();
/*217*/

        if $stack21 < $stack23 goto label02;
/*217*/

        goto label12;
/*218*/

     label02:
        $stack24 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack25 = <order.domain.SeatClass: order.domain.SeatClass NONE>;
/*220*/

        $stack26 = virtualinvoke $stack25.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack24 != $stack26 goto label03;
/*220*/

        $stack73 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getNoSeat()>();
/*221*/

        $stack74 = $stack73 + 1;
/*221*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setNoSeat(int)>($stack74);
/*221*/

        goto label12;
/*222*/

     label03:
        $stack27 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack28 = <order.domain.SeatClass: order.domain.SeatClass BUSINESS>;
/*220*/

        $stack29 = virtualinvoke $stack28.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack27 != $stack29 goto label04;
/*220*/

        $stack71 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getBusinessSeat()>();
/*223*/

        $stack72 = $stack71 + 1;
/*223*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setBusinessSeat(int)>($stack72);
/*223*/

        goto label12;
/*224*/

     label04:
        $stack30 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack31 = <order.domain.SeatClass: order.domain.SeatClass FIRSTCLASS>;
/*220*/

        $stack32 = virtualinvoke $stack31.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack30 != $stack32 goto label05;
/*220*/

        $stack69 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getFirstClassSeat()>();
/*225*/

        $stack70 = $stack69 + 1;
/*225*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setFirstClassSeat(int)>($stack70);
/*225*/

        goto label12;
/*226*/

     label05:
        $stack33 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack34 = <order.domain.SeatClass: order.domain.SeatClass SECONDCLASS>;
/*220*/

        $stack35 = virtualinvoke $stack34.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack33 != $stack35 goto label06;
/*220*/

        $stack67 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getSecondClassSeat()>();
/*227*/

        $stack68 = $stack67 + 1;
/*227*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setSecondClassSeat(int)>($stack68);
/*227*/

        goto label12;
/*228*/

     label06:
        $stack36 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack37 = <order.domain.SeatClass: order.domain.SeatClass HARDSEAT>;
/*220*/

        $stack38 = virtualinvoke $stack37.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack36 != $stack38 goto label07;
/*220*/

        $stack65 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getHardSeat()>();
/*229*/

        $stack66 = $stack65 + 1;
/*229*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setHardSeat(int)>($stack66);
/*229*/

        goto label12;
/*230*/

     label07:
        $stack39 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack40 = <order.domain.SeatClass: order.domain.SeatClass SOFTSEAT>;
/*220*/

        $stack41 = virtualinvoke $stack40.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack39 != $stack41 goto label08;
/*220*/

        $stack63 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getSoftSeat()>();
/*231*/

        $stack64 = $stack63 + 1;
/*231*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setSoftSeat(int)>($stack64);
/*231*/

        goto label12;
/*232*/

     label08:
        $stack42 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack43 = <order.domain.SeatClass: order.domain.SeatClass HARDBED>;
/*220*/

        $stack44 = virtualinvoke $stack43.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack42 != $stack44 goto label09;
/*220*/

        $stack61 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getHardBed()>();
/*233*/

        $stack62 = $stack61 + 1;
/*233*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setHardBed(int)>($stack62);
/*233*/

        goto label12;
/*234*/

     label09:
        $stack45 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack46 = <order.domain.SeatClass: order.domain.SeatClass SOFTBED>;
/*220*/

        $stack47 = virtualinvoke $stack46.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack45 != $stack47 goto label10;
/*220*/

        $stack59 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getSoftBed()>();
/*235*/

        $stack60 = $stack59 + 1;
/*235*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setSoftBed(int)>($stack60);
/*235*/

        goto label12;
/*236*/

     label10:
        $stack48 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*220*/

        $stack49 = <order.domain.SeatClass: order.domain.SeatClass HIGHSOFTBED>;
/*220*/

        $stack50 = virtualinvoke $stack49.<order.domain.SeatClass: int getCode()>();
/*220*/

        if $stack48 != $stack50 goto label11;
/*220*/

        $stack57 = virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: int getHighSoftBed()>();
/*237*/

        $stack58 = $stack57 + 1;
/*237*/

        virtualinvoke $stack10.<order.domain.CalculateSoldTicketResult: void setHighSoftBed(int)>($stack58);
/*237*/

        goto label12;
/*238*/

     label11:
        $stack52 = <java.lang.System: java.io.PrintStream out>;
/*239*/

        $stack51 = new java.lang.StringBuilder;
/*239*/

        specialinvoke $stack51.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Calculate Sold Tickets] Seat class not exists. Order ID:");
/*239*/

        $stack53 = virtualinvoke order.<order.domain.Order: java.util.UUID getId()>();
/*239*/

        $stack54 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack53);
/*239*/

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>();
/*239*/

        virtualinvoke $stack52.<java.io.PrintStream: void println(java.lang.String)>($stack55);
/*239*/

     label12:
        $stack19 = interfaceinvoke $stack18.<java.util.Iterator: boolean hasNext()>();
/*216*/

        if $stack19 != 0 goto label01;
/*216*/

        return $stack10;
/*242*/
    }

    public order.domain.QueryOrderResult getAllOrders()
    {
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack3;
        order.domain.QueryOrderResult $stack5;
        java.util.ArrayList $stack4;

        this := @this: order.service.OrderServiceImpl;

        $stack3 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*247*/

        $stack4 = interfaceinvoke $stack3.<order.repository.OrderRepository: java.util.ArrayList findAll()>();
/*247*/

        $stack5 = new order.domain.QueryOrderResult;
/*248*/

        specialinvoke $stack5.<order.domain.QueryOrderResult: void <init>(boolean,java.lang.String,java.util.ArrayList)>(1, "Success.", $stack4);
/*248*/

        return $stack5;
/*249*/
    }

/*[info]*/
    public order.domain.ModifyOrderStatusResult modifyOrder(order.domain.ModifyOrderStatusInfo)
    {
        order.domain.ModifyOrderStatusInfo info;
        java.util.UUID $stack6;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack4, $stack10;
        int $stack9;
        java.lang.String $stack5;
        order.domain.Order $stack7;
        order.domain.ModifyOrderStatusResult $stack8;

        this := @this: order.service.OrderServiceImpl;

        info := @parameter0: order.domain.ModifyOrderStatusInfo;

        $stack4 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*254*/

        $stack5 = virtualinvoke info.<order.domain.ModifyOrderStatusInfo: java.lang.String getOrderId()>();
/*254*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*254*/

        $stack7 = interfaceinvoke $stack4.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack6);
/*254*/

        $stack8 = new order.domain.ModifyOrderStatusResult;
/*255*/

        specialinvoke $stack8.<order.domain.ModifyOrderStatusResult: void <init>()>();
/*255*/

        if $stack7 != null goto label1;
/*256*/

        virtualinvoke $stack8.<order.domain.ModifyOrderStatusResult: void setStatus(boolean)>(0);
/*257*/

        virtualinvoke $stack8.<order.domain.ModifyOrderStatusResult: void setMessage(java.lang.String)>("Order Not Found");
/*258*/

        virtualinvoke $stack8.<order.domain.ModifyOrderStatusResult: void setOrder(order.domain.Order)>(null);
/*259*/

        goto label2;
/*260*/

     label1:
        $stack9 = virtualinvoke info.<order.domain.ModifyOrderStatusInfo: int getStatus()>();
/*261*/

        virtualinvoke $stack7.<order.domain.Order: void setStatus(int)>($stack9);
/*261*/

        $stack10 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*262*/

        interfaceinvoke $stack10.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($stack7);
/*262*/

        virtualinvoke $stack8.<order.domain.ModifyOrderStatusResult: void setStatus(boolean)>(1);
/*263*/

        virtualinvoke $stack8.<order.domain.ModifyOrderStatusResult: void setMessage(java.lang.String)>("Success");
/*264*/

        virtualinvoke $stack8.<order.domain.ModifyOrderStatusResult: void setOrder(order.domain.Order)>($stack7);
/*265*/

     label2:
        return $stack8;
/*267*/
    }

/*[info]*/
    public order.domain.GetOrderPriceResult getOrderPrice(order.domain.GetOrderPrice)
    {
        java.io.PrintStream $stack10, $stack15;
        java.util.UUID $stack6;
        order.service.OrderServiceImpl this;
        order.domain.GetOrderPriceResult $stack8;
        order.repository.OrderRepository $stack4;
        order.domain.GetOrderPrice info;
        java.lang.StringBuilder $stack9, $stack12;
        java.lang.String $stack5, $stack11, $stack13, $stack14;
        order.domain.Order $stack7;

        this := @this: order.service.OrderServiceImpl;

        info := @parameter0: order.domain.GetOrderPrice;

        $stack4 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*272*/

        $stack5 = virtualinvoke info.<order.domain.GetOrderPrice: java.lang.String getOrderId()>();
/*272*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*272*/

        $stack7 = interfaceinvoke $stack4.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack6);
/*272*/

        $stack8 = new order.domain.GetOrderPriceResult;
/*273*/

        specialinvoke $stack8.<order.domain.GetOrderPriceResult: void <init>()>();
/*273*/

        if $stack7 != null goto label1;
/*274*/

        $stack15 = <java.lang.System: java.io.PrintStream out>;
/*275*/

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>("[Other Service][Get Order Price] Order Not Found.");
/*275*/

        virtualinvoke $stack8.<order.domain.GetOrderPriceResult: void setStatus(boolean)>(0);
/*276*/

        virtualinvoke $stack8.<order.domain.GetOrderPriceResult: void setMessage(java.lang.String)>("Order Not Found");
/*277*/

        virtualinvoke $stack8.<order.domain.GetOrderPriceResult: void setPrice(java.lang.String)>("-1.0");
/*278*/

        goto label2;
/*279*/

     label1:
        virtualinvoke $stack8.<order.domain.GetOrderPriceResult: void setStatus(boolean)>(1);
/*280*/

        virtualinvoke $stack8.<order.domain.GetOrderPriceResult: void setMessage(java.lang.String)>("Success");
/*281*/

        $stack10 = <java.lang.System: java.io.PrintStream out>;
/*282*/

        $stack9 = new java.lang.StringBuilder;
/*282*/

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Get Order Price] Price:");
/*282*/

        $stack11 = virtualinvoke $stack7.<order.domain.Order: java.lang.String getPrice()>();
/*282*/

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);
/*282*/

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();
/*282*/

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>($stack13);
/*282*/

        $stack14 = virtualinvoke $stack7.<order.domain.Order: java.lang.String getPrice()>();
/*283*/

        virtualinvoke $stack8.<order.domain.GetOrderPriceResult: void setPrice(java.lang.String)>($stack14);
/*283*/

     label2:
        return $stack8;
/*285*/
    }

/*[info]*/
    public order.domain.PayOrderResult payOrder(order.domain.PayOrderInfo)
    {
        order.domain.PayOrderResult $stack8;
        java.util.UUID $stack6;
        order.service.OrderServiceImpl this;
        order.domain.PayOrderInfo info;
        order.repository.OrderRepository $stack4, $stack11;
        int $stack10;
        java.lang.String $stack5;
        order.domain.OrderStatus $stack9;
        order.domain.Order $stack7;

        this := @this: order.service.OrderServiceImpl;

        info := @parameter0: order.domain.PayOrderInfo;

        $stack4 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*290*/

        $stack5 = virtualinvoke info.<order.domain.PayOrderInfo: java.lang.String getOrderId()>();
/*290*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*290*/

        $stack7 = interfaceinvoke $stack4.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack6);
/*290*/

        $stack8 = new order.domain.PayOrderResult;
/*291*/

        specialinvoke $stack8.<order.domain.PayOrderResult: void <init>()>();
/*291*/

        if $stack8 != null goto label1;
/*292*/

        virtualinvoke $stack8.<order.domain.PayOrderResult: void setStatus(boolean)>(0);
/*293*/

        virtualinvoke $stack8.<order.domain.PayOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*294*/

        virtualinvoke $stack8.<order.domain.PayOrderResult: void setOrder(order.domain.Order)>(null);
/*295*/

        goto label2;
/*296*/

     label1:
        $stack9 = <order.domain.OrderStatus: order.domain.OrderStatus PAID>;
/*297*/

        $stack10 = virtualinvoke $stack9.<order.domain.OrderStatus: int getCode()>();
/*297*/

        virtualinvoke $stack7.<order.domain.Order: void setStatus(int)>($stack10);
/*297*/

        $stack11 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*298*/

        interfaceinvoke $stack11.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($stack7);
/*298*/

        virtualinvoke $stack8.<order.domain.PayOrderResult: void setStatus(boolean)>(1);
/*299*/

        virtualinvoke $stack8.<order.domain.PayOrderResult: void setMessage(java.lang.String)>("Success.");
/*300*/

        virtualinvoke $stack8.<order.domain.PayOrderResult: void setOrder(order.domain.Order)>($stack7);
/*301*/

     label2:
        return $stack8;
/*303*/
    }

/*[info]*/
    public order.domain.GetOrderResult getOrderById(order.domain.GetOrderByIdInfo)
    {
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack4;
        java.lang.String $stack5;
        java.util.UUID $stack6;
        order.domain.Order $stack7;
        order.domain.GetOrderByIdInfo info;
        order.domain.GetOrderResult $stack8;

        this := @this: order.service.OrderServiceImpl;

        info := @parameter0: order.domain.GetOrderByIdInfo;

        $stack4 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*308*/

        $stack5 = virtualinvoke info.<order.domain.GetOrderByIdInfo: java.lang.String getOrderId()>();
/*308*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*308*/

        $stack7 = interfaceinvoke $stack4.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack6);
/*308*/

        $stack8 = new order.domain.GetOrderResult;
/*309*/

        specialinvoke $stack8.<order.domain.GetOrderResult: void <init>()>();
/*309*/

        if $stack7 != null goto label1;
/*310*/

        virtualinvoke $stack8.<order.domain.GetOrderResult: void setStatus(boolean)>(0);
/*311*/

        virtualinvoke $stack8.<order.domain.GetOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*312*/

        virtualinvoke $stack8.<order.domain.GetOrderResult: void setOrder(order.domain.Order)>(null);
/*313*/

        goto label2;
/*314*/

     label1:
        virtualinvoke $stack8.<order.domain.GetOrderResult: void setStatus(boolean)>(1);
/*315*/

        virtualinvoke $stack8.<order.domain.GetOrderResult: void setMessage(java.lang.String)>("Success.");
/*316*/

        virtualinvoke $stack8.<order.domain.GetOrderResult: void setOrder(order.domain.Order)>($stack7);
/*317*/

     label2:
        return $stack8;
/*319*/
    }

/*[order]*/
    public void initOrder(order.domain.Order)
    {
        java.io.PrintStream $stack7;
        java.util.UUID $stack4, $stack8;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack3, $stack11;
        java.lang.StringBuilder $stack6, $stack9;
        java.lang.String $stack10;
        order.domain.Order order, $stack5;

        this := @this: order.service.OrderServiceImpl;

        order := @parameter0: order.domain.Order;

        $stack3 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*324*/

        $stack4 = virtualinvoke order.<order.domain.Order: java.util.UUID getId()>();
/*324*/

        $stack5 = interfaceinvoke $stack3.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack4);
/*324*/

        if $stack5 != null goto label1;
/*325*/

        $stack11 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*326*/

        interfaceinvoke $stack11.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(order);
/*326*/

        goto label2;
/*327*/

     label1:
        $stack7 = <java.lang.System: java.io.PrintStream out>;
/*328*/

        $stack6 = new java.lang.StringBuilder;
/*328*/

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Init Order] Order Already Exists ID:");
/*328*/

        $stack8 = virtualinvoke order.<order.domain.Order: java.util.UUID getId()>();
/*328*/

        $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8);
/*328*/

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();
/*328*/

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>($stack10);
/*328*/

     label2:
        return;
/*330*/
    }

/*[info]*/
    public order.domain.GetOrderInfoForSecurityResult checkSecurityAboutOrder(order.domain.GetOrderInfoForSecurity)
    {
        order.domain.GetOrderInfoForSecurity info;
        java.util.Date $stack15, $stack17, $stack24;
        java.util.ArrayList $stack14;
        java.util.Calendar $stack16;
        int countOrderInOneHour, countTotalValidOrder, $stack21, $stack23, $stack27, $stack29, $stack32, $stack34, $i0;
        java.lang.String $stack12;
        order.domain.OrderStatus $stack22, $stack28, $stack33;
        boolean $stack19, $stack25;
        java.util.Iterator $stack18;
        java.util.UUID $stack13;
        order.service.OrderServiceImpl this;
        order.domain.GetOrderInfoForSecurityResult $u0;
        order.repository.OrderRepository $stack11;
        java.lang.Object $stack20;
        order.domain.Order order;

        this := @this: order.service.OrderServiceImpl;

        info := @parameter0: order.domain.GetOrderInfoForSecurity;

        $u0 = new order.domain.GetOrderInfoForSecurityResult;
/*334*/

        specialinvoke $u0.<order.domain.GetOrderInfoForSecurityResult: void <init>()>();
/*334*/

        $stack11 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*335*/

        $stack12 = virtualinvoke info.<order.domain.GetOrderInfoForSecurity: java.lang.String getAccountId()>();
/*335*/

        $stack13 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack12);
/*335*/

        $stack14 = interfaceinvoke $stack11.<order.repository.OrderRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack13);
/*335*/

        countOrderInOneHour = 0;
/*336*/

        countTotalValidOrder = 0;
/*337*/

        $stack15 = virtualinvoke info.<order.domain.GetOrderInfoForSecurity: java.util.Date getCheckDate()>();
/*338*/

        $stack16 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
/*339*/

        virtualinvoke $stack16.<java.util.Calendar: void setTime(java.util.Date)>($stack15);
/*340*/

        $i0 = (int) -1;

        virtualinvoke $stack16.<java.util.Calendar: void add(int,int)>(11, $i0);
/*341*/

        $stack17 = virtualinvoke $stack16.<java.util.Calendar: java.util.Date getTime()>();
/*342*/

        $stack18 = virtualinvoke $stack14.<java.util.ArrayList: java.util.Iterator iterator()>();
/*343*/

        goto label4;
/*343*/

     label1:
        $stack20 = interfaceinvoke $stack18.<java.util.Iterator: java.lang.Object next()>();
/*343*/

        order = (order.domain.Order) $stack20;
/*343*/

        $stack21 = virtualinvoke order.<order.domain.Order: int getStatus()>();
/*344*/

        $stack22 = <order.domain.OrderStatus: order.domain.OrderStatus NOTPAID>;
/*344*/

        $stack23 = virtualinvoke $stack22.<order.domain.OrderStatus: int getCode()>();
/*344*/

        if $stack21 == $stack23 goto label2;
/*344*/

        $stack27 = virtualinvoke order.<order.domain.Order: int getStatus()>();
/*345*/

        $stack28 = <order.domain.OrderStatus: order.domain.OrderStatus PAID>;
/*345*/

        $stack29 = virtualinvoke $stack28.<order.domain.OrderStatus: int getCode()>();
/*345*/

        if $stack27 == $stack29 goto label2;
/*345*/

        $stack32 = virtualinvoke order.<order.domain.Order: int getStatus()>();
/*346*/

        $stack33 = <order.domain.OrderStatus: order.domain.OrderStatus COLLECTED>;
/*346*/

        $stack34 = virtualinvoke $stack33.<order.domain.OrderStatus: int getCode()>();
/*346*/

        if $stack32 != $stack34 goto label3;
/*346*/

     label2:
        countTotalValidOrder = countTotalValidOrder + 1;
/*347*/

     label3:
        $stack24 = virtualinvoke order.<order.domain.Order: java.util.Date getBoughtDate()>();
/*349*/

        $stack25 = virtualinvoke $stack24.<java.util.Date: boolean after(java.util.Date)>($stack17);
/*349*/

        if $stack25 == 0 goto label4;
/*349*/

        countOrderInOneHour = countOrderInOneHour + 1;
/*350*/

     label4:
        $stack19 = interfaceinvoke $stack18.<java.util.Iterator: boolean hasNext()>();
/*343*/

        if $stack19 != 0 goto label1;
/*343*/

        virtualinvoke $u0.<order.domain.GetOrderInfoForSecurityResult: void setOrderNumInLastOneHour(int)>(countOrderInOneHour);
/*353*/

        virtualinvoke $u0.<order.domain.GetOrderInfoForSecurityResult: void setOrderNumOfValidOrder(int)>(countTotalValidOrder);
/*354*/

        return $u0;
/*355*/
    }

/*[info]*/
    public order.domain.DeleteOrderResult deleteOrder(order.domain.DeleteOrderInfo)
    {
        order.domain.DeleteOrderInfo info;
        order.domain.DeleteOrderResult $stack9;
        java.util.UUID $stack6;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack7, $stack10;
        java.lang.String $stack5;
        order.domain.Order $stack8;

        this := @this: order.service.OrderServiceImpl;

        info := @parameter0: order.domain.DeleteOrderInfo;

        $stack5 = virtualinvoke info.<order.domain.DeleteOrderInfo: java.lang.String getOrderId()>();
/*360*/

        $stack6 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>($stack5);
/*360*/

        $stack7 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*361*/

        $stack8 = interfaceinvoke $stack7.<order.repository.OrderRepository: order.domain.Order findById(java.util.UUID)>($stack6);
/*361*/

        $stack9 = new order.domain.DeleteOrderResult;
/*362*/

        specialinvoke $stack9.<order.domain.DeleteOrderResult: void <init>()>();
/*362*/

        if $stack8 != null goto label1;
/*363*/

        virtualinvoke $stack9.<order.domain.DeleteOrderResult: void setStatus(boolean)>(0);
/*364*/

        virtualinvoke $stack9.<order.domain.DeleteOrderResult: void setMessage(java.lang.String)>("Order Not Exist.");
/*365*/

        goto label2;
/*366*/

     label1:
        $stack10 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*367*/

        interfaceinvoke $stack10.<order.repository.OrderRepository: void deleteById(java.util.UUID)>($stack6);
/*367*/

        virtualinvoke $stack9.<order.domain.DeleteOrderResult: void setStatus(boolean)>(1);
/*368*/

        virtualinvoke $stack9.<order.domain.DeleteOrderResult: void setMessage(java.lang.String)>("Success.");
/*369*/

     label2:
        return $stack9;
/*371*/
    }

/*[order]*/
    public order.domain.AddOrderResult addNewOrder(order.domain.Order)
    {
        java.util.ArrayList $stack7;
        order.domain.AddOrderResult $stack8;
        java.lang.String $stack16, $stack18;
        boolean $stack9;
        java.io.PrintStream $stack4, $stack13, $stack15, $stack19;
        java.util.UUID $stack6, $stack10;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack5, $stack11;
        java.lang.StringBuilder $stack14, $stack17;
        order.domain.Order order;

        this := @this: order.service.OrderServiceImpl;

        order := @parameter0: order.domain.Order;

        $stack4 = <java.lang.System: java.io.PrintStream out>;
/*376*/

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Add Order] Ready Add Order.");
/*376*/

        $stack5 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*377*/

        $stack6 = virtualinvoke order.<order.domain.Order: java.util.UUID getAccountId()>();
/*377*/

        $stack7 = interfaceinvoke $stack5.<order.repository.OrderRepository: java.util.ArrayList findByAccountId(java.util.UUID)>($stack6);
/*377*/

        $stack8 = new order.domain.AddOrderResult;
/*378*/

        specialinvoke $stack8.<order.domain.AddOrderResult: void <init>()>();
/*378*/

        $stack9 = virtualinvoke $stack7.<java.util.ArrayList: boolean contains(java.lang.Object)>(order);
/*379*/

        if $stack9 == 0 goto label1;
/*379*/

        $stack19 = <java.lang.System: java.io.PrintStream out>;
/*380*/

        virtualinvoke $stack19.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Add Order] Fail.Order already exists.");
/*380*/

        virtualinvoke $stack8.<order.domain.AddOrderResult: void setStatus(boolean)>(0);
/*381*/

        virtualinvoke $stack8.<order.domain.AddOrderResult: void setMessage(java.lang.String)>("Order already exist");
/*382*/

        virtualinvoke $stack8.<order.domain.AddOrderResult: void setOrder(order.domain.Order)>(null);
/*383*/

        goto label2;
/*384*/

     label1:
        $stack10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();
/*385*/

        virtualinvoke order.<order.domain.Order: void setId(java.util.UUID)>($stack10);
/*385*/

        $stack11 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*386*/

        interfaceinvoke $stack11.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>(order);
/*386*/

        $stack13 = <java.lang.System: java.io.PrintStream out>;
/*387*/

        virtualinvoke $stack13.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Add Order] Success.");
/*387*/

        $stack15 = <java.lang.System: java.io.PrintStream out>;
/*388*/

        $stack14 = new java.lang.StringBuilder;
/*388*/

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>(java.lang.String)>("[Order Service][Admin Add Order] Price:");
/*388*/

        $stack16 = virtualinvoke order.<order.domain.Order: java.lang.String getPrice()>();
/*388*/

        $stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);
/*388*/

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();
/*388*/

        virtualinvoke $stack15.<java.io.PrintStream: void println(java.lang.String)>($stack18);
/*388*/

        virtualinvoke $stack8.<order.domain.AddOrderResult: void setStatus(boolean)>(1);
/*389*/

        virtualinvoke $stack8.<order.domain.AddOrderResult: void setMessage(java.lang.String)>("Success");
/*390*/

        virtualinvoke $stack8.<order.domain.AddOrderResult: void setOrder(order.domain.Order)>(order);
/*391*/

     label2:
        return $stack8;
/*393*/
    }

/*[order]*/
    public order.domain.UpdateOrderResult updateOrder(order.domain.Order)
    {
        order.domain.UpdateOrderResult $stack6;
        java.util.Date $stack8, $stack9, $stack10;
        int $stack11, $stack12, $stack16, $stack21;
        java.lang.String $stack13, $stack14, $stack15, $stack17, $stack18, $stack19, $stack20;
        java.io.PrintStream $stack24, $stack25;
        java.util.UUID $stack4, $stack7;
        order.service.OrderServiceImpl this;
        order.repository.OrderRepository $stack22;
        order.domain.Order order, $stack5;

        this := @this: order.service.OrderServiceImpl;

        order := @parameter0: order.domain.Order;

        $stack4 = virtualinvoke order.<order.domain.Order: java.util.UUID getId()>();
/*398*/

        $stack5 = virtualinvoke this.<order.service.OrderServiceImpl: order.domain.Order findOrderById(java.util.UUID)>($stack4);
/*398*/

        $stack6 = new order.domain.UpdateOrderResult;
/*399*/

        specialinvoke $stack6.<order.domain.UpdateOrderResult: void <init>()>();
/*399*/

        if $stack5 != null goto label1;
/*400*/

        $stack25 = <java.lang.System: java.io.PrintStream out>;
/*401*/

        virtualinvoke $stack25.<java.io.PrintStream: void println(java.lang.String)>("[Order Service][Admin Update Order] Fail.Order not found.");
/*401*/

        virtualinvoke $stack6.<order.domain.UpdateOrderResult: void setStatus(boolean)>(0);
/*402*/

        virtualinvoke $stack6.<order.domain.UpdateOrderResult: void setMessage(java.lang.String)>("Order Not Found");
/*403*/

        virtualinvoke $stack6.<order.domain.UpdateOrderResult: void setOrder(order.domain.Order)>(null);
/*404*/

        goto label2;
/*405*/

     label1:
        $stack7 = virtualinvoke order.<order.domain.Order: java.util.UUID getAccountId()>();
/*406*/

        virtualinvoke $stack5.<order.domain.Order: void setAccountId(java.util.UUID)>($stack7);
/*406*/

        $stack8 = virtualinvoke order.<order.domain.Order: java.util.Date getBoughtDate()>();
/*407*/

        virtualinvoke $stack5.<order.domain.Order: void setBoughtDate(java.util.Date)>($stack8);
/*407*/

        $stack9 = virtualinvoke order.<order.domain.Order: java.util.Date getTravelDate()>();
/*408*/

        virtualinvoke $stack5.<order.domain.Order: void setTravelDate(java.util.Date)>($stack9);
/*408*/

        $stack10 = virtualinvoke order.<order.domain.Order: java.util.Date getTravelTime()>();
/*409*/

        virtualinvoke $stack5.<order.domain.Order: void setTravelTime(java.util.Date)>($stack10);
/*409*/

        $stack11 = virtualinvoke order.<order.domain.Order: int getCoachNumber()>();
/*410*/

        virtualinvoke $stack5.<order.domain.Order: void setCoachNumber(int)>($stack11);
/*410*/

        $stack12 = virtualinvoke order.<order.domain.Order: int getSeatClass()>();
/*411*/

        virtualinvoke $stack5.<order.domain.Order: void setSeatClass(int)>($stack12);
/*411*/

        $stack13 = virtualinvoke order.<order.domain.Order: java.lang.String getSeatNumber()>();
/*412*/

        virtualinvoke $stack5.<order.domain.Order: void setSeatNumber(java.lang.String)>($stack13);
/*412*/

        $stack14 = virtualinvoke order.<order.domain.Order: java.lang.String getFrom()>();
/*413*/

        virtualinvoke $stack5.<order.domain.Order: void setFrom(java.lang.String)>($stack14);
/*413*/

        $stack15 = virtualinvoke order.<order.domain.Order: java.lang.String getTo()>();
/*414*/

        virtualinvoke $stack5.<order.domain.Order: void setTo(java.lang.String)>($stack15);
/*414*/

        $stack16 = virtualinvoke order.<order.domain.Order: int getStatus()>();
/*415*/

        virtualinvoke $stack5.<order.domain.Order: void setStatus(int)>($stack16);
/*415*/

        $stack17 = virtualinvoke order.<order.domain.Order: java.lang.String getTrainNumber()>();
/*416*/

        virtualinvoke $stack5.<order.domain.Order: void setTrainNumber(java.lang.String)>($stack17);
/*416*/

        $stack18 = virtualinvoke order.<order.domain.Order: java.lang.String getPrice()>();
/*417*/

        virtualinvoke $stack5.<order.domain.Order: void setPrice(java.lang.String)>($stack18);
/*417*/

        $stack19 = virtualinvoke order.<order.domain.Order: java.lang.String getContactsName()>();
/*418*/

        virtualinvoke $stack5.<order.domain.Order: void setContactsName(java.lang.String)>($stack19);
/*418*/

        $stack20 = virtualinvoke order.<order.domain.Order: java.lang.String getContactsDocumentNumber()>();
/*419*/

        virtualinvoke $stack5.<order.domain.Order: void setContactsDocumentNumber(java.lang.String)>($stack20);
/*419*/

        $stack21 = virtualinvoke order.<order.domain.Order: int getDocumentType()>();
/*420*/

        virtualinvoke $stack5.<order.domain.Order: void setDocumentType(int)>($stack21);
/*420*/

        $stack22 = this.<order.service.OrderServiceImpl: order.repository.OrderRepository orderRepository>;
/*421*/

        interfaceinvoke $stack22.<order.repository.OrderRepository: java.lang.Object save(java.lang.Object)>($stack5);
/*421*/

        $stack24 = <java.lang.System: java.io.PrintStream out>;
/*422*/

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>("[Order Service] [Admin Update Order] Success.");
/*422*/

        virtualinvoke $stack6.<order.domain.UpdateOrderResult: void setOrder(order.domain.Order)>($stack5);
/*423*/

        virtualinvoke $stack6.<order.domain.UpdateOrderResult: void setStatus(boolean)>(1);
/*424*/

        virtualinvoke $stack6.<order.domain.UpdateOrderResult: void setMessage(java.lang.String)>("Success");
/*425*/

     label2:
        return $stack6;
/*427*/
    }
}
