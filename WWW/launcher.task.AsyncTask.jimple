public class launcher.task.AsyncTask extends java.lang.Object
{
    private org.springframework.web.client.RestTemplate restTemplate;

    public void <init>()
    {
        launcher.task.AsyncTask this;

        this := @this: launcher.task.AsyncTask;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.concurrent.Future sendQueryOrder(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $stack23;
        java.util.Random $u1;
        java.util.ArrayList queryOrderResult;
        java.util.concurrent.Future $r1;
        int $stack10, $stack31;
        launcher.task.AsyncTask this;
        java.lang.String loginId, $stack16, loginToken, $stack21, $stack33;
        org.springframework.scheduling.'annotation'.AsyncResult $u7;
        org.springframework.web.client.RestTemplate $stack25;
        java.io.PrintStream $stack29;
        org.springframework.http.HttpHeaders $u2;
        org.springframework.http.HttpMethod $stack24;
        org.springframework.util.MultiValueMap $r0;
        launcher.domain.QueryInfo $u0;
        org.springframework.http.HttpEntity $u5;
        java.lang.Object $stack27;
        org.springframework.http.ResponseEntity $stack26;
        java.lang.StringBuilder $stack14, $stack15, $stack19, $stack20, $stack30, $stack32, $u3, $u4, $u6;

        this := @this: launcher.task.AsyncTask;

        loginId := @parameter0: java.lang.String;

        loginToken := @parameter1: java.lang.String;

        $u0 = new launcher.domain.QueryInfo;

        specialinvoke $u0.<launcher.domain.QueryInfo: void <init>()>();

        virtualinvoke $u0.<launcher.domain.QueryInfo: void disableBoughtDateQuery()>();

        virtualinvoke $u0.<launcher.domain.QueryInfo: void disableTravelDateQuery()>();

        $u1 = new java.util.Random;

        specialinvoke $u1.<java.util.Random: void <init>()>();

        $stack10 = virtualinvoke $u1.<java.util.Random: int nextInt(int)>(3);

        virtualinvoke $u0.<launcher.domain.QueryInfo: void enableStateQuery(int)>($stack10);

        $u2 = new org.springframework.http.HttpHeaders;

        specialinvoke $u2.<org.springframework.http.HttpHeaders: void <init>()>();

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginId=");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginId);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u2.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack16);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginToken=");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginToken);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u2.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack21);

        $u5 = new org.springframework.http.HttpEntity;

        $r0 = (org.springframework.util.MultiValueMap) $u2;

        specialinvoke $u5.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>($u0, $r0);

        $stack25 = this.<launcher.task.AsyncTask: org.springframework.web.client.RestTemplate restTemplate>;

        $stack24 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod POST>;

        $stack23 = newarray (java.lang.Object)[0];

        $stack26 = virtualinvoke $stack25.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>("http://ts-order-service:12031/order/query", $stack24, $u5, class "Ljava/util/ArrayList;", $stack23);

        $stack27 = virtualinvoke $stack26.<org.springframework.http.ResponseEntity: java.lang.Object getBody()>();

        queryOrderResult = (java.util.ArrayList) $stack27;

        $stack29 = <java.lang.System: java.io.PrintStream out>;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\u67e5\u8be2\u7ed3\u679cOrder\u6570\u91cf] ");

        $stack31 = virtualinvoke queryOrderResult.<java.util.ArrayList: int size()>();

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack29.<java.io.PrintStream: void println(java.lang.String)>($stack33);

        $u7 = new org.springframework.scheduling.'annotation'.AsyncResult;

        specialinvoke $u7.<org.springframework.scheduling.'annotation'.AsyncResult: void <init>(java.lang.Object)>(queryOrderResult);

        $r1 = (java.util.concurrent.Future) $u7;

        return $r1;
    }

    public java.util.concurrent.Future sendQueryOtherOrder(java.lang.String, java.lang.String)
    {
        java.lang.Object[] $stack23;
        java.util.Random $u1;
        java.util.ArrayList queryOrderResult;
        java.util.concurrent.Future $r1;
        int $stack10, $stack31;
        launcher.task.AsyncTask this;
        java.lang.String loginId, $stack16, loginToken, $stack21, $stack33;
        org.springframework.scheduling.'annotation'.AsyncResult $u7;
        org.springframework.web.client.RestTemplate $stack25;
        java.io.PrintStream $stack29;
        org.springframework.http.HttpHeaders $u2;
        org.springframework.http.HttpMethod $stack24;
        org.springframework.util.MultiValueMap $r0;
        launcher.domain.QueryInfo $u0;
        org.springframework.http.HttpEntity $u5;
        java.lang.Object $stack27;
        org.springframework.http.ResponseEntity $stack26;
        java.lang.StringBuilder $stack14, $stack15, $stack19, $stack20, $stack30, $stack32, $u3, $u4, $u6;

        this := @this: launcher.task.AsyncTask;

        loginId := @parameter0: java.lang.String;

        loginToken := @parameter1: java.lang.String;

        $u0 = new launcher.domain.QueryInfo;

        specialinvoke $u0.<launcher.domain.QueryInfo: void <init>()>();

        virtualinvoke $u0.<launcher.domain.QueryInfo: void disableBoughtDateQuery()>();

        virtualinvoke $u0.<launcher.domain.QueryInfo: void disableTravelDateQuery()>();

        $u1 = new java.util.Random;

        specialinvoke $u1.<java.util.Random: void <init>()>();

        $stack10 = virtualinvoke $u1.<java.util.Random: int nextInt(int)>(3);

        virtualinvoke $u0.<launcher.domain.QueryInfo: void enableStateQuery(int)>($stack10);

        $u2 = new org.springframework.http.HttpHeaders;

        specialinvoke $u2.<org.springframework.http.HttpHeaders: void <init>()>();

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginId=");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginId);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u2.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack16);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginToken=");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginToken);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u2.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack21);

        $u5 = new org.springframework.http.HttpEntity;

        $r0 = (org.springframework.util.MultiValueMap) $u2;

        specialinvoke $u5.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>($u0, $r0);

        $stack25 = this.<launcher.task.AsyncTask: org.springframework.web.client.RestTemplate restTemplate>;

        $stack24 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod POST>;

        $stack23 = newarray (java.lang.Object)[0];

        $stack26 = virtualinvoke $stack25.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>("http://ts-order-other-service:12032/orderOther/query", $stack24, $u5, class "Ljava/util/ArrayList;", $stack23);

        $stack27 = virtualinvoke $stack26.<org.springframework.http.ResponseEntity: java.lang.Object getBody()>();

        queryOrderResult = (java.util.ArrayList) $stack27;

        $stack29 = <java.lang.System: java.io.PrintStream out>;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\u67e5\u8be2\u7ed3\u679cOrderOther\u6570\u91cf] ");

        $stack31 = virtualinvoke queryOrderResult.<java.util.ArrayList: int size()>();

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack29.<java.io.PrintStream: void println(java.lang.String)>($stack33);

        $u7 = new org.springframework.scheduling.'annotation'.AsyncResult;

        specialinvoke $u7.<org.springframework.scheduling.'annotation'.AsyncResult: void <init>(java.lang.Object)>(queryOrderResult);

        $r1 = (java.util.concurrent.Future) $u7;

        return $r1;
    }

    public java.util.concurrent.Future sendOrderTicket(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $stack26;
        java.util.Date $u0;
        java.util.concurrent.Future $r1;
        launcher.domain.OrderTicketsInfoWithOrderId $u1;
        launcher.domain.OrderTicketsResult orderTicketsResult;
        launcher.task.AsyncTask this;
        java.lang.String orderId, loginId, $stack19, loginToken, $stack24, $stack34, $stack36;
        org.springframework.scheduling.'annotation'.AsyncResult $u7;
        org.springframework.web.client.RestTemplate $stack28;
        java.io.PrintStream $stack32;
        org.springframework.http.HttpHeaders $u2;
        org.springframework.http.HttpMethod $stack27;
        org.springframework.util.MultiValueMap $r0;
        org.springframework.http.HttpEntity $u5;
        java.lang.Object $stack30;
        org.springframework.http.ResponseEntity $stack29;
        java.lang.StringBuilder $stack17, $stack18, $stack22, $stack23, $stack33, $stack35, $u3, $u4, $u6;

        this := @this: launcher.task.AsyncTask;

        orderId := @parameter0: java.lang.String;

        loginId := @parameter1: java.lang.String;

        loginToken := @parameter2: java.lang.String;

        $u1 = new launcher.domain.OrderTicketsInfoWithOrderId;

        $u0 = new java.util.Date;

        specialinvoke $u0.<java.util.Date: void <init>()>();

        specialinvoke $u1.<launcher.domain.OrderTicketsInfoWithOrderId: void <init>(java.lang.String,java.lang.String,int,java.util.Date,java.lang.String,java.lang.String,java.lang.String)>("aded7dc5-06a7-4503-8e21-b7cad7a1f386", "Z1234", 2, $u0, "Shang Hai", "Nan Jing", orderId);

        $u2 = new org.springframework.http.HttpHeaders;

        specialinvoke $u2.<org.springframework.http.HttpHeaders: void <init>()>();

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginId=");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginId);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u2.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack19);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack22 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginToken=");

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginToken);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u2.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack24);

        $u5 = new org.springframework.http.HttpEntity;

        $r0 = (org.springframework.util.MultiValueMap) $u2;

        specialinvoke $u5.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>($u1, $r0);

        $stack28 = this.<launcher.task.AsyncTask: org.springframework.web.client.RestTemplate restTemplate>;

        $stack27 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod POST>;

        $stack26 = newarray (java.lang.Object)[0];

        $stack29 = virtualinvoke $stack28.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>("http://ts-preserve-other-service:14569/preserveOther", $stack27, $u5, class "Llauncher/domain/OrderTicketsResult;", $stack26);

        $stack30 = virtualinvoke $stack29.<org.springframework.http.ResponseEntity: java.lang.Object getBody()>();

        orderTicketsResult = (launcher.domain.OrderTicketsResult) $stack30;

        $stack32 = <java.lang.System: java.io.PrintStream out>;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack33 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\u9884\u5b9a\u7ed3\u679c] ");

        $stack34 = virtualinvoke orderTicketsResult.<launcher.domain.OrderTicketsResult: java.lang.String getMessage()>();

        $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack32.<java.io.PrintStream: void println(java.lang.String)>($stack36);

        $u7 = new org.springframework.scheduling.'annotation'.AsyncResult;

        specialinvoke $u7.<org.springframework.scheduling.'annotation'.AsyncResult: void <init>(java.lang.Object)>(orderTicketsResult);

        $r1 = (java.util.concurrent.Future) $u7;

        return $r1;
    }

    public java.util.concurrent.Future sendInsidePayment(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.util.concurrent.Future $r1;
        launcher.task.AsyncTask this;
        org.springframework.scheduling.'annotation'.AsyncResult $u6;
        org.springframework.web.client.RestTemplate $stack25;
        boolean $stack29;
        org.springframework.http.HttpHeaders $u1;
        org.springframework.http.HttpEntity $u4;
        java.lang.StringBuilder $stack14, $stack15, $stack19, $stack20, $stack32, $stack33, $u2, $u3, $u5;
        java.lang.Object[] $stack23;
        java.lang.Boolean $stack28, $stack36;
        java.lang.String orderId, tripId, loginId, $stack16, loginToken, $stack21, $stack34, tmpString1, tmpString2;
        java.io.PrintStream $stack31, tpLocal;
        launcher.domain.PaymentInfo $u0;
        org.springframework.http.HttpMethod $stack24;
        org.springframework.util.MultiValueMap $r0;
        java.lang.Object $stack27;
        org.springframework.http.ResponseEntity $stack26;

        this := @this: launcher.task.AsyncTask;

        orderId := @parameter0: java.lang.String;

        tripId := @parameter1: java.lang.String;

        loginId := @parameter2: java.lang.String;

        loginToken := @parameter3: java.lang.String;

        tpLocal = <java.lang.System: java.io.PrintStream out>;

        $u0 = new launcher.domain.PaymentInfo;

        specialinvoke $u0.<launcher.domain.PaymentInfo: void <init>(java.lang.String,java.lang.String)>(orderId, tripId);

        $u1 = new org.springframework.http.HttpHeaders;

        specialinvoke $u1.<org.springframework.http.HttpHeaders: void <init>()>();

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginId=");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginId);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u1.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack16);

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginToken=");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginToken);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u1.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack21);

        $u4 = new org.springframework.http.HttpEntity;

        $r0 = (org.springframework.util.MultiValueMap) $u1;

        specialinvoke $u4.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>($u0, $r0);

        $stack25 = this.<launcher.task.AsyncTask: org.springframework.web.client.RestTemplate restTemplate>;

        $stack24 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod POST>;

        $stack23 = newarray (java.lang.Object)[0];

        $stack26 = virtualinvoke $stack25.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>("http://ts-inside-payment-service:18673/inside_payment/pay", $stack24, $u4, class "Ljava/lang/Boolean;", $stack23);

        $stack27 = virtualinvoke $stack26.<org.springframework.http.ResponseEntity: java.lang.Object getBody()>();

        $stack28 = (java.lang.Boolean) $stack27;

        $stack29 = virtualinvoke $stack28.<java.lang.Boolean: boolean booleanValue()>();

        tmpString1 = "$stack29=";

        tmpString2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack29);

        tmpString1 = virtualinvoke tmpString1.<java.lang.String: java.lang.String concat(java.lang.String)>(tmpString2);

        virtualinvoke tpLocal.<java.io.PrintStream: void println(java.lang.String)>(tmpString1);

        $stack31 = <java.lang.System: java.io.PrintStream out>;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\u652f\u4ed8\u7ed3\u679c] ");

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack29);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack31.<java.io.PrintStream: void println(java.lang.String)>($stack34);

        $u6 = new org.springframework.scheduling.'annotation'.AsyncResult;

        $stack36 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack29);

        specialinvoke $u6.<org.springframework.scheduling.'annotation'.AsyncResult: void <init>(java.lang.Object)>($stack36);

        $r1 = (java.util.concurrent.Future) $u6;

        return $r1;
    }

    public java.util.concurrent.Future sendOrderCancel(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $stack22;
        java.util.concurrent.Future $r1;
        launcher.domain.CancelOrderInfo $u0;
        launcher.domain.CancelOrderResult cancelOrderResult;
        launcher.task.AsyncTask this;
        java.lang.String orderId, loginId, $stack15, loginToken, $stack20, $stack30, $stack32;
        org.springframework.scheduling.'annotation'.AsyncResult $u6;
        org.springframework.web.client.RestTemplate $stack24;
        java.io.PrintStream $stack28;
        org.springframework.http.HttpHeaders $u1;
        org.springframework.http.HttpMethod $stack23;
        org.springframework.util.MultiValueMap $r0;
        org.springframework.http.HttpEntity $u4;
        java.lang.Object $stack26;
        org.springframework.http.ResponseEntity $stack25;
        java.lang.StringBuilder $stack13, $stack14, $stack18, $stack19, $stack29, $stack31, $u2, $u3, $u5;

        this := @this: launcher.task.AsyncTask;

        orderId := @parameter0: java.lang.String;

        loginId := @parameter1: java.lang.String;

        loginToken := @parameter2: java.lang.String;

        $u0 = new launcher.domain.CancelOrderInfo;

        specialinvoke $u0.<launcher.domain.CancelOrderInfo: void <init>(java.lang.String)>(orderId);

        $u1 = new org.springframework.http.HttpHeaders;

        specialinvoke $u1.<org.springframework.http.HttpHeaders: void <init>()>();

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginId=");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginId);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u1.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack15);

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack18 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("loginToken=");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loginToken);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $u1.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Cookie", $stack20);

        $u4 = new org.springframework.http.HttpEntity;

        $r0 = (org.springframework.util.MultiValueMap) $u1;

        specialinvoke $u4.<org.springframework.http.HttpEntity: void <init>(java.lang.Object,org.springframework.util.MultiValueMap)>($u0, $r0);

        $stack24 = this.<launcher.task.AsyncTask: org.springframework.web.client.RestTemplate restTemplate>;

        $stack23 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod POST>;

        $stack22 = newarray (java.lang.Object)[0];

        $stack25 = virtualinvoke $stack24.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>("http://ts-cancel-service:18885/cancelOrder", $stack23, $u4, class "Llauncher/domain/CancelOrderResult;", $stack22);

        $stack26 = virtualinvoke $stack25.<org.springframework.http.ResponseEntity: java.lang.Object getBody()>();

        cancelOrderResult = (launcher.domain.CancelOrderResult) $stack26;

        $stack28 = <java.lang.System: java.io.PrintStream out>;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\u9000\u7968\u7ed3\u679c] ");

        $stack30 = virtualinvoke cancelOrderResult.<launcher.domain.CancelOrderResult: java.lang.String getMessage()>();

        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack28.<java.io.PrintStream: void println(java.lang.String)>($stack32);

        $u6 = new org.springframework.scheduling.'annotation'.AsyncResult;

        specialinvoke $u6.<org.springframework.scheduling.'annotation'.AsyncResult: void <init>(java.lang.Object)>(cancelOrderResult);

        $r1 = (java.util.concurrent.Future) $u6;

        return $r1;
    }
}
